[DEBUG] [2018-03-25 14:52:41][org.springframework.test.context.junit4.SpringJUnit4ClassRunner]SpringJUnit4ClassRunner constructor called with [class com.test.mb.TestMyBatis].
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.context.support.AbstractDelegatingSmartContextLoader]Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@5b199c2e declaringClass = 'com.test.mb.TestMyBatis', locations = '{classpath:spring-mybatis.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.context.ContextLoaderUtils]Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.context.TestContextManager]@TestExecutionListeners is not present for class [class com.test.mb.TestMyBatis]: using defaults.
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved @ProfileValueSourceConfiguration [null] for test class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved @ProfileValueSourceConfiguration [null] for test class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved @ProfileValueSourceConfiguration [null] for test class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved @ProfileValueSourceConfiguration [null] for test class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved @ProfileValueSourceConfiguration [null] for test class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved @ProfileValueSourceConfiguration [null] for test class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.annotation.ProfileValueUtils]Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.context.support.DependencyInjectionTestExecutionListener]Performing dependency injection for test context [[DefaultTestContext@1da988ff testClass = TestMyBatis, testInstance = com.test.mb.TestMyBatis@65612c8f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4eb49448 testClass = TestMyBatis, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.context.support.AbstractDelegatingSmartContextLoader]Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@4eb49448 testClass = TestMyBatis, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
[DEBUG] [2018-03-25 14:52:42][org.springframework.test.context.support.AbstractGenericContextLoader]Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@4eb49448 testClass = TestMyBatis, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
[DEBUG] [2018-03-25 14:52:42][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-03-25 14:52:42][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-03-25 14:52:42][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring-mybatis.xml]
[DEBUG] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
[DEBUG] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
[DEBUG] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
[DEBUG] [2018-03-25 14:52:42][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.annotation.ClassPathBeanDefinitionScanner]JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.annotation.ClassPathBeanDefinitionScanner]JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in directory tree [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/bean] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/canstants] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/utils] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/servic] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/controller] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/service] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/service/impl] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/springmvc] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:com/lava/**/*.class] to resources [file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/bean/Person.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/bean/Faq.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao/PersonMapper.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao/FaqMapper.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/canstants/Canstants.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/utils/MailUtils$1.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/utils/UUIDUtils.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/utils/MailUtils.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/utils/ImportExcelUtil.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/utils/ResponseUtils.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/servic/IPersonService.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/servic/IFaqService.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/controller/LoginController.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/controller/FaqController.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/service/impl/PersonServiceImpl.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/service/impl/FaqServiceImpl.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/springmvc/DateConverter.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/springmvc/LoginInterceptor.class]]
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.annotation.ClassPathBeanDefinitionScanner]Identified candidate component class: file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/controller/LoginController.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.annotation.ClassPathBeanDefinitionScanner]Identified candidate component class: file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/controller/FaqController.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.annotation.ClassPathBeanDefinitionScanner]Identified candidate component class: file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/service/impl/PersonServiceImpl.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.annotation.ClassPathBeanDefinitionScanner]Identified candidate component class: file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/service/impl/FaqServiceImpl.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.xml.BeanDefinitionParserDelegate]Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 13 bean definitions from location pattern [classpath:spring-mybatis.xml]
[INFO] [2018-03-25 14:52:43][org.springframework.context.support.GenericApplicationContext]Refreshing org.springframework.context.support.GenericApplicationContext@47862525: startup date [Sun Mar 25 14:52:43 CST 2018]; root of context hierarchy
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.support.GenericApplicationContext]Bean factory for org.springframework.context.support.GenericApplicationContext@47862525: org.springframework.beans.factory.support.DefaultListableBeanFactory@3bc35be0: defining beans [loginController,faqController,personService,faqService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager]; root of factory hierarchy
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in directory tree [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao/**/*.class]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:com/lava/lavafaq/dao/**/*.class] to resources [file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao/PersonMapper.class], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao/FaqMapper.class]]
[DEBUG] [2018-03-25 14:52:43][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao/PersonMapper.class]
[DEBUG] [2018-03-25 14:52:43][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/dao/FaqMapper.class]
[DEBUG] [2018-03-25 14:52:43][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'personMapper' and 'com.lava.lavafaq.dao.PersonMapper' mapperInterface
[DEBUG] [2018-03-25 14:52:43][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'faqMapper' and 'com.lava.lavafaq.dao.FaqMapper' mapperInterface
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'propertyConfigurer'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'propertyConfigurer'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'propertyConfigurer' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'propertyConfigurer'
[INFO] [2018-03-25 14:52:43][org.springframework.beans.factory.config.PropertyPlaceholderConfigurer]Loading properties file from class path resource [jdbc.properties]
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[INFO] [2018-03-25 14:52:43][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.support.GenericApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6524f39a]
[DEBUG] [2018-03-25 14:52:43][org.springframework.context.support.GenericApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@672ce4f6]
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3bc35be0: defining beans [loginController,faqController,personService,faqService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,personMapper,faqMapper]; root of factory hierarchy
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'loginController'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'loginController'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.lava.lavafaq.controller.LoginController]: ResourceElement for private com.lava.lavafaq.servic.IPersonService com.lava.lavafaq.controller.LoginController.personService
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'loginController' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected method of bean 'loginController': ResourceElement for private com.lava.lavafaq.servic.IPersonService com.lava.lavafaq.controller.LoginController.personService
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'personService'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'personService'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.lava.lavafaq.service.impl.PersonServiceImpl]: ResourceElement for private com.lava.lavafaq.dao.PersonMapper com.lava.lavafaq.service.impl.PersonServiceImpl.personMapper
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'personService' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected method of bean 'personService': ResourceElement for private com.lava.lavafaq.dao.PersonMapper com.lava.lavafaq.service.impl.PersonServiceImpl.personMapper
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'personMapper'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'personMapper'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'personMapper' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:43][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dataSource'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dataSource'
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dataSource' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dataSource'
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in directory tree [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping] for files matching pattern [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping/*.xml]
[DEBUG] [2018-03-25 14:52:43][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath:com/lava/lavafaq/mapping/*.xml] to resources [file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping/FaqMapper.xml], file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping/PersonMapper.xml]]
[DEBUG] [2018-03-25 14:52:43][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:43][org.mybatis.spring.SqlSessionFactoryBean]Property 'configLocation' not specified, using default MyBatis Configuration
[DEBUG] [2018-03-25 14:52:44][org.mybatis.spring.SqlSessionFactoryBean]Parsed mapper file: 'file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping/FaqMapper.xml]'
[DEBUG] [2018-03-25 14:52:44][org.mybatis.spring.SqlSessionFactoryBean]Parsed mapper file: 'file [/Users/fengjinan/Downloads/ssm_demo/target/classes/com/lava/lavafaq/mapping/PersonMapper.xml]'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'personMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'personMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'personService'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'loginController'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'faqController'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'faqController'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.lava.lavafaq.controller.FaqController]: AutowiredFieldElement for private com.lava.lavafaq.servic.IFaqService com.lava.lavafaq.controller.FaqController.faqService
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'faqController' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected method of bean 'faqController': AutowiredFieldElement for private com.lava.lavafaq.servic.IFaqService com.lava.lavafaq.controller.FaqController.faqService
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'faqMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'faqMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'faqMapper' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'faqMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'faqMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'faqService'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'faqService'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.lava.lavafaq.service.impl.FaqServiceImpl]: AutowiredFieldElement for private com.lava.lavafaq.dao.FaqMapper com.lava.lavafaq.service.impl.FaqServiceImpl.faqMapper
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'faqService' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected method of bean 'faqService': AutowiredFieldElement for private com.lava.lavafaq.dao.FaqMapper com.lava.lavafaq.service.impl.FaqServiceImpl.faqMapper
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'faqMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'faqService' to bean named 'faqMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'faqService'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'faqController' to bean named 'faqService'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'faqController'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'personService'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'faqService'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'propertyConfigurer'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dataSource'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'transactionManager'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'transactionManager'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dataSource'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'transactionManager'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'transactionManager'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'personMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'faqMapper'
[DEBUG] [2018-03-25 14:52:44][org.springframework.context.support.GenericApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@669b0d36]
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:44][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-03-25 14:52:44][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-03-25 14:52:44][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-03-25 14:52:44][org.springframework.test.context.CacheAwareContextLoaderDelegate]Storing ApplicationContext in cache under key [[MergedContextConfiguration@4eb49448 testClass = TestMyBatis, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected method of bean 'com.test.mb.TestMyBatis': ResourceElement for private com.lava.lavafaq.servic.IPersonService com.test.mb.TestMyBatis.personService
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'personService'
[INFO] [2018-03-25 14:52:44][com.test.mb.TestMyBatis]wangshuo
[DEBUG] [2018-03-25 14:52:44][org.springframework.test.context.support.DirtiesContextTestExecutionListener]After test method: context [DefaultTestContext@1da988ff testClass = TestMyBatis, testInstance = com.test.mb.TestMyBatis@65612c8f, testMethod = test1@TestMyBatis, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4eb49448 testClass = TestMyBatis, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[DEBUG] [2018-03-25 14:52:44][org.springframework.test.context.support.DirtiesContextTestExecutionListener]After test class: context [DefaultTestContext@1da988ff testClass = TestMyBatis, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4eb49448 testClass = TestMyBatis, locations = '{classpath:spring-mybatis.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
[INFO] [2018-03-25 14:52:44][org.springframework.context.support.GenericApplicationContext]Closing org.springframework.context.support.GenericApplicationContext@47862525: startup date [Sun Mar 25 14:52:43 CST 2018]; root of context hierarchy
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3bc35be0: defining beans [loginController,faqController,personService,faqService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,propertyConfigurer,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,personMapper,faqMapper]; root of factory hierarchy
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DefaultListableBeanFactory]Retrieved dependent beans for bean 'personService': [com.test.mb.TestMyBatis]
[DEBUG] [2018-03-25 14:52:44][org.springframework.beans.factory.support.DisposableBeanAdapter]Invoking destroy method 'close' on bean with name 'dataSource'
[DEBUG] [2018-06-22 23:44:50][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-22 23:44:50][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-22 23:44:50][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-22 23:44:50][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@e73f9ac: startup date [Fri Jun 22 23:44:50 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-22 23:44:50][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-22 23:44:50][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-22 23:44:50][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-22 23:44:50][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [spring-dubbo.xml]
[DEBUG] [2018-06-23 13:01:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:01:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:01:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:01:26][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: startup date [Sat Jun 23 13:01:26 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:01:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:01:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:01:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:01:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:01:26][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:01:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:01:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:01:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:01:27][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:01:27][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: org.springframework.beans.factory.support.DefaultListableBeanFactory@69cb839f: defining beans [demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:01:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@541e2efb]
[DEBUG] [2018-06-23 13:01:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6072f9c0]
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@69cb839f: defining beans [demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:01:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:01:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:01:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@57f4bf33]
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:01:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:01:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:01:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:01:27][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:05:03][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:05:03][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:05:03][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:05:03][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: startup date [Sat Jun 23 13:05:03 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:05:03][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:05:03][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:05:03][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:05:03][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:05:03][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:05:03][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:05:03][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:05:03][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:05:04][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:05:04][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:05:04][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@99e8be2]
[DEBUG] [2018-06-23 13:05:04][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c6addb8]
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:05:04][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:05:04][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:05:04][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@534da62]
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:05:04][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:05:04][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:05:04][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:05:04][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:06:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:06:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:06:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:06:53][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ae7c6d1: startup date [Sat Jun 23 13:06:53 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:06:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:06:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:06:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:06:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:06:53][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:06:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:06:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:06:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:06:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:06:54][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:06:54][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6ae7c6d1: org.springframework.beans.factory.support.DefaultListableBeanFactory@207462c0: defining beans [demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:06:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@58ce93c1]
[DEBUG] [2018-06-23 13:06:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6e10fcd4]
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@207462c0: defining beans [demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:06:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:06:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:06:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5d3c6c41]
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:06:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:06:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:07:11][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:07:11][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:08:19][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:08:19][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:08:19][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:08:19][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: startup date [Sat Jun 23 13:08:19 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:08:19][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:08:19][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:08:19][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:08:19][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:08:19][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:08:19][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@99e8be2]
[DEBUG] [2018-06-23 13:08:19][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c6addb8]
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:08:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:08:19][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:08:19][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@534da62]
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:08:19][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:08:19][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:08:19][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:08:19][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:09:28][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:09:28][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:09:28][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:09:28][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@c4b5011: startup date [Sat Jun 23 13:09:28 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:09:28][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:09:28][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:09:28][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:09:28][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:09:28][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@c4b5011: org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:09:28][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@99e8be2]
[DEBUG] [2018-06-23 13:09:28][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c6addb8]
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:09:28][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:09:28][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:09:28][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4c841173]
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:09:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:09:28][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:09:28][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:09:28][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:10:47][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: startup date [Sat Jun 23 13:10:47 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:10:47][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 1 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:10:47][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: org.springframework.beans.factory.support.DefaultListableBeanFactory@21d7b599: defining beans [demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:10:47][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3c13033a]
[DEBUG] [2018-06-23 13:10:47][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6b3a210]
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@21d7b599: defining beans [demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:10:47][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@75165e3e]
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:10:47][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:10:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:14:21][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:14:21][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:14:21][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:14:21][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@c4b5011: startup date [Sat Jun 23 13:14:21 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:14:21][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:14:21][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:14:21][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:14:21][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:14:21][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@c4b5011: org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:14:21][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@99e8be2]
[DEBUG] [2018-06-23 13:14:21][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c6addb8]
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:14:21][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:14:22][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4c841173]
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:14:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:14:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4784&side=provider&timestamp=1529730862253, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4784&side=provider&timestamp=1529730862253 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=4784&registry=multicast&timestamp=1529730862239, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:14:22][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:22][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:22][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:32][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:32][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:32][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4784&side=provider&timestamp=1529730862253, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:14:32][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4784&side=provider&timestamp=1529730862253, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:30:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:30:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:30:36][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: startup date [Sat Jun 23 13:30:36 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:30:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:30:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:30:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:30:36][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:30:36][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@493c2797: org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:30:36][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@99e8be2]
[DEBUG] [2018-06-23 13:30:36][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c6addb8]
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@302e71fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:30:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:30:36][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@534da62]
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:30:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:30:36][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4870&side=provider&timestamp=1529731836881, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4870&side=provider&timestamp=1529731836881 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=4870&registry=zookeeper&timestamp=1529731836872, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:37][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:30:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:37][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:47][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4870&side=provider&timestamp=1529731836881, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:30:47][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4870&side=provider&timestamp=1529731836881, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:34:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:34:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:34:36][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: startup date [Sat Jun 23 13:34:36 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:34:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:34:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:34:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:34:36][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:34:36][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:34:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:34:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:34:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:34:37][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:34:37][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:34:37][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@862ef09]
[DEBUG] [2018-06-23 13:34:37][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@cd4cdd5]
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:34:37][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6ab1e7b5]
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:34:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:34:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:34:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:34:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:34:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&pid=4881&registry=zookeeper&timestamp=1529732077658, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:37][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:34:38][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:34:38][com.alibaba.dubbo.common.concurrent.ExecutionList] [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.3.3/zookeeper-3.3.3.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@389c6ad9
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server /127.0.0.1:2181
[DEBUG] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642824c10f0001, negotiated timeout = 30000
[DEBUG] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-06-23 13:34:38][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-06-23 13:34:38][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,3,-101  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response::  
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 2,3  replyHeader:: 2,3,-101  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response::  
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,3,-101  request:: '/dubbo,F  response::  
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,4,0  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo 
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,5,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService 
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,6,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers 
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,7,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4881%2526side%253Dprovider%2526timestamp%253D1529732077669,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4881%2526side%253Dprovider%2526timestamp%253D1529732077669 
[INFO] [2018-06-23 13:34:38][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,7,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,1,0,0,0,1,6} 
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 9,1  replyHeader:: 9,8,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators 
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 10,3  replyHeader:: 10,8,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 13:34:38][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 11,8  replyHeader:: 11,8,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{} 
[INFO] [2018-06-23 13:34:38][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:34:38][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:34:38][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:34:38][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:34:38][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:34:38][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:34:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 1ms
[DEBUG] [2018-06-23 13:34:58][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 1ms
[DEBUG] [2018-06-23 13:35:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 0ms
[DEBUG] [2018-06-23 13:35:18][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 1ms
[DEBUG] [2018-06-23 13:35:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 1ms
[DEBUG] [2018-06-23 13:35:30][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:35:30][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:35:30][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:35:30][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 13:35:30 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:35:30][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:35:30][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:35:30][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:35:30][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:35:30][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@62a0b27f: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:35:30][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@63b535a0]
[DEBUG] [2018-06-23 13:35:30][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3c4bb6f5]
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@62a0b27f: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:35:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:35:30][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:35:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:35:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:35:31][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1448f8cb]
[WARN] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]FactoryBean threw exception from getObjectType, despite the contract saying that it should return null if the type of its object cannot be determined yet
java.lang.IllegalStateException: com.java.iavafaq.service.DemoService
	at com.alibaba.dubbo.config.ReferenceConfig.getInterfaceClass(ReferenceConfig.java:452)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObjectType(ReferenceBean.java:69)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBean(FactoryBeanRegistrySupport.java:66)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:492)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:384)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:353)
	at org.springframework.context.support.DefaultLifecycleProcessor.getLifecycleBeans(DefaultLifecycleProcessor.java:273)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:131)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:112)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:773)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.lava.lavafaq.dubbo.Consumer.main(Consumer.java:9)
Caused by: java.lang.ClassNotFoundException: com.java.iavafaq.service.DemoService
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:274)
	at com.alibaba.dubbo.config.ReferenceConfig.getInterfaceClass(ReferenceConfig.java:448)
	... 13 more
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:35:31][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:35:31][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:35:31][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[WARN] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]FactoryBean threw exception from getObjectType, despite the contract saying that it should return null if the type of its object cannot be determined yet
java.lang.IllegalStateException: com.java.iavafaq.service.DemoService
	at com.alibaba.dubbo.config.ReferenceConfig.getInterfaceClass(ReferenceConfig.java:452)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObjectType(ReferenceBean.java:69)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBean(FactoryBeanRegistrySupport.java:66)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:492)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:384)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:353)
	at org.springframework.context.support.DefaultLifecycleProcessor.getLifecycleBeans(DefaultLifecycleProcessor.java:273)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:131)
	at org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:91)
	at org.springframework.context.support.AbstractApplicationContext.start(AbstractApplicationContext.java:1180)
	at com.lava.lavafaq.dubbo.Consumer.main(Consumer.java:11)
Caused by: java.lang.ClassNotFoundException: com.java.iavafaq.service.DemoService
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:274)
	at com.alibaba.dubbo.config.ReferenceConfig.getInterfaceClass(ReferenceConfig.java:448)
	... 10 more
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:35:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[INFO] [2018-06-23 13:35:31][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:35:31][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:35:38][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 0ms
[DEBUG] [2018-06-23 13:35:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 0ms
[DEBUG] [2018-06-23 13:35:58][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 1ms
[DEBUG] [2018-06-23 13:36:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0001 after 1ms
[INFO] [2018-06-23 13:36:12][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:12][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4881&timestamp=1529732077658], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4881&timestamp=1529732077658, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:12][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 12,2  replyHeader:: 12,9,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4881%2526side%253Dprovider%2526timestamp%253D1529732077669,-1  response:: null
[INFO] [2018-06-23 13:36:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:12][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-06-23 13:36:12][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-06-23 13:36:12][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG] [2018-06-23 13:36:12][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642824c10f0001
[DEBUG] [2018-06-23 13:36:12][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642824c10f0001
[DEBUG] [2018-06-23 13:36:12][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0001, packet:: clientPath:null serverPath:null finished:false header:: 13,-11  replyHeader:: 13,10,0  request:: null response:: null
[DEBUG] [2018-06-23 13:36:12][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642824c10f0001
[INFO] [2018-06-23 13:36:12][org.apache.zookeeper.ZooKeeper]Session: 0x1642824c10f0001 closed
[DEBUG] [2018-06-23 13:36:12][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642824c10f0001 : Unable to read additional data from server sessionid 0x1642824c10f0001, likely server has closed socket
[INFO] [2018-06-23 13:36:12][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 13:36:12][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-06-23 13:36:22][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:22][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:22][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:22][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:28][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:28][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:28][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:36:28][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: startup date [Sat Jun 23 13:36:28 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:36:28][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:28][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:28][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:36:28][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:36:28][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:36:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:36:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:36:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:36:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:36:28][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:36:29][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:36:29][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@862ef09]
[DEBUG] [2018-06-23 13:36:29][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@cd4cdd5]
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:36:29][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6ab1e7b5]
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:36:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&pid=4892&registry=zookeeper&timestamp=1529732189481, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-provider-127.0.0.1:2181.cache, data: {com.lava.lavafaq.service.DemoService=empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4881&side=provider&timestamp=1529732077669}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:29][com.alibaba.dubbo.common.concurrent.ExecutionList] [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:29][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO] [2018-06-23 13:36:29][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.3.3/zookeeper-3.3.3.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@389c6ad9
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG] [2018-06-23 13:36:30][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Opening socket connection to server /127.0.0.1:2181
[DEBUG] [2018-06-23 13:36:30][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642824c10f0002, negotiated timeout = 30000
[DEBUG] [2018-06-23 13:36:30][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-06-23 13:36:30][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-06-23 13:36:30][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-06-23 13:36:30][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-06-23 13:36:30][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,11,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response:: s{6,6,1529732078219,1529732078219,0,2,0,0,0,0,9} 
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,12,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4892%2526side%253Dprovider%2526timestamp%253D1529732189491,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4892%2526side%253Dprovider%2526timestamp%253D1529732189491 
[INFO] [2018-06-23 13:36:30][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,12,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,2,0,0,0,2,8} 
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,13,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,13,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 13:36:30][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 6,8  replyHeader:: 6,13,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{} 
[INFO] [2018-06-23 13:36:30][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:30][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:30][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:30][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:30][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:30][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:36:30][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:36:30][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:36:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:36:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:36:39][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:39][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4892&timestamp=1529732189481], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4892&timestamp=1529732189481, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:39][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 7,2  replyHeader:: 7,14,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4892%2526side%253Dprovider%2526timestamp%253D1529732189491,-1  response:: null
[INFO] [2018-06-23 13:36:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:39][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-06-23 13:36:39][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-06-23 13:36:39][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG] [2018-06-23 13:36:39][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642824c10f0002
[DEBUG] [2018-06-23 13:36:39][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642824c10f0002
[DEBUG] [2018-06-23 13:36:39][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0002, packet:: clientPath:null serverPath:null finished:false header:: 8,-11  replyHeader:: 8,15,0  request:: null response:: null
[DEBUG] [2018-06-23 13:36:39][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642824c10f0002
[DEBUG] [2018-06-23 13:36:39][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642824c10f0002 : Unable to read additional data from server sessionid 0x1642824c10f0002, likely server has closed socket
[INFO] [2018-06-23 13:36:39][org.apache.zookeeper.ZooKeeper]Session: 0x1642824c10f0002 closed
[INFO] [2018-06-23 13:36:39][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 13:36:39][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-06-23 13:36:49][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:49][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:49][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:49][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:57][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:57][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:57][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:36:57][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 13:36:57 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:36:57][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:57][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:36:57][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:36:57][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:36:57][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:36:57][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:36:57][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:36:57][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:36:58][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:36:58][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@62a0b27f: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:36:58][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@63b535a0]
[DEBUG] [2018-06-23 13:36:58][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3c4bb6f5]
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@62a0b27f: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:36:58][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:58][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:58][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:36:58][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7007cf85]
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:36:58][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:36:58][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:36:58][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:36:58][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:36:58][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:58][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:58][com.alibaba.dubbo.common.concurrent.ExecutionList] [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:58][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO] [2018-06-23 13:36:58][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.3.3/zookeeper-3.3.3.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@75edcb1f
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Opening socket connection to server /127.0.0.1:2181
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642824c10f0003, negotiated timeout = 30000
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-06-23 13:36:59][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:59][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,16,-101  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,F  response::  
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 2,3  replyHeader:: 2,16,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,2,0,0,0,2,8} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,17,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,18,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4895%2526side%253Dconsumer%2526timestamp%253D1529732218691,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4895%2526side%253Dconsumer%2526timestamp%253D1529732218691 
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,18,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,3,0,0,0,3,17} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,19,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 7,3  replyHeader:: 7,19,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: s{6,6,1529732078219,1529732078219,0,4,0,0,0,0,14} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 8,8  replyHeader:: 8,19,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: v{} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,19,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,3,0,0,0,3,17} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,20,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 11,3  replyHeader:: 11,20,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 12,8  replyHeader:: 12,20,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,20,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,3,0,0,0,3,17} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,21,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/routers 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 15,3  replyHeader:: 15,21,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: s{21,21,1529732219548,1529732219548,0,0,0,0,0,0,21} 
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 16,8  replyHeader:: 16,21,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: v{} 
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, urls: [empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4895&timestamp=1529732218747], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4895&timestamp=1529732218747, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 17,2  replyHeader:: 17,22,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4895%2526side%253Dconsumer%2526timestamp%253D1529732218691,-1  response:: null
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:36:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642824c10f0003
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642824c10f0003
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0003, packet:: clientPath:null serverPath:null finished:false header:: 18,-11  replyHeader:: 18,23,0  request:: null response:: null
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642824c10f0003
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ZooKeeper]Session: 0x1642824c10f0003 closed
[DEBUG] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642824c10f0003 : Unable to read additional data from server sessionid 0x1642824c10f0003, likely server has closed socket
[DEBUG] [2018-06-23 13:36:59][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-06-23 13:36:59][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 13:37:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:37:26][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: startup date [Sat Jun 23 13:37:26 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:37:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:37:26][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:37:26][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:37:26][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@862ef09]
[DEBUG] [2018-06-23 13:37:26][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@cd4cdd5]
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:37:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:37:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:37:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6ab1e7b5]
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&pid=4898&registry=zookeeper&timestamp=1529732247197, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-provider-127.0.0.1:2181.cache, data: {com.lava.lavafaq.service.DemoService=empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4892&side=provider&timestamp=1529732189491}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.common.concurrent.ExecutionList] [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.3.3/zookeeper-3.3.3.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@389c6ad9
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Opening socket connection to server /127.0.0.1:2181
[DEBUG] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642824c10f0004, negotiated timeout = 30000
[DEBUG] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-06-23 13:37:27][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,24,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response:: s{6,6,1529732078219,1529732078219,0,4,0,0,0,0,14} 
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,25,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4898%2526side%253Dprovider%2526timestamp%253D1529732247208,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4898%2526side%253Dprovider%2526timestamp%253D1529732247208 
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,25,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,26,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,26,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 13:37:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 6,8  replyHeader:: 6,26,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{} 
[INFO] [2018-06-23 13:37:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:27][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:37:27][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:37:27][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:37:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:37:35][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:35][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:35][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:37:35][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: startup date [Sat Jun 23 13:37:35 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:37:35][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:35][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:37:35][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:37:35][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:37:35][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: org.springframework.beans.factory.support.DefaultListableBeanFactory@62a0b27f: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:37:35][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@63b535a0]
[DEBUG] [2018-06-23 13:37:35][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3c4bb6f5]
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@62a0b27f: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:37:35][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:37:36][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@260e3a17]
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:37:36][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:37:36][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:37:36][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:37:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-consumer-127.0.0.1:2181.cache, data: {com.lava.lavafaq.service.DemoService=empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4895&side=consumer&timestamp=1529732218691}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.common.concurrent.ExecutionList] [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.3.3/zookeeper-3.3.3.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@329b5cdd
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Opening socket connection to server /127.0.0.1:2181
[DEBUG] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642824c10f0005, negotiated timeout = 30000
[DEBUG] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-06-23 13:37:36][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,27,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,F  response:: s{17,17,1529732219507,1529732219507,0,2,0,0,0,0,22} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,28,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4899%2526side%253Dconsumer%2526timestamp%253D1529732256272,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4899%2526side%253Dconsumer%2526timestamp%253D1529732256272 
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,28,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,29,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,29,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: s{6,6,1529732078219,1529732078219,0,5,0,0,0,1,25} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 6,8  replyHeader:: 6,29,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4898%2526side%253Dprovider%2526timestamp%253D1529732247208} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 7,3  replyHeader:: 7,29,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 8,1  replyHeader:: 8,30,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,30,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 10,8  replyHeader:: 10,30,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 11,3  replyHeader:: 11,30,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,31,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,31,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: s{21,21,1529732219548,1529732219548,0,0,0,0,0,0,21} 
[DEBUG] [2018-06-23 13:37:36][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,31,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: v{} 
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, urls: [dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.10.102:20880 from NettyClient 192.168.10.102 using dubbo version 2.6.1, channel is NettyChannel [channel=[id: 0x7a89c626, /192.168.10.102:65286 => /192.168.10.102:20880]], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient fengjinandeAir.lan/192.168.10.102 connect to the server /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:36][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.lava.lavafaq.service.DemoService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&register.ip=192.168.10.102&remote.timestamp=1529732247208&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:37][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:37][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:37][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4899&timestamp=1529732256327], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:37][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4899&timestamp=1529732256327, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:37][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:37][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 15,2  replyHeader:: 15,32,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4899%2526side%253Dconsumer%2526timestamp%253D1529732256272,-1  response:: null
[INFO] [2018-06-23 13:37:37][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:37][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:37][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:37][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-06-23 13:37:37][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-06-23 13:37:37][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG] [2018-06-23 13:37:37][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642824c10f0005
[DEBUG] [2018-06-23 13:37:37][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642824c10f0005
[DEBUG] [2018-06-23 13:37:37][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0005, packet:: clientPath:null serverPath:null finished:false header:: 16,-11  replyHeader:: 16,33,0  request:: null response:: null
[DEBUG] [2018-06-23 13:37:37][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642824c10f0005
[INFO] [2018-06-23 13:37:37][org.apache.zookeeper.ZooKeeper]Session: 0x1642824c10f0005 closed
[DEBUG] [2018-06-23 13:37:37][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642824c10f0005 : Unable to read additional data from server sessionid 0x1642824c10f0005, likely server has closed socket
[DEBUG] [2018-06-23 13:37:37][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-06-23 13:37:37][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 13:37:37][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[INFO] [2018-06-23 13:37:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /192.168.10.102:65286-->/192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:47][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x7a89c626, /192.168.10.102:65286 => /192.168.10.102:20880], dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 13:37:47][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.10.102:20880. You can graceful shutdown now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:20880,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&register.ip=192.168.10.102&remote.timestamp=1529732247208&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:65286,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 192.168.10.102:0-->192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:37:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&register.ip=192.168.10.102&remote.timestamp=1529732247208&side=consumer&timestamp=1529732256272, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:37:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[DEBUG] [2018-06-23 13:37:57][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[DEBUG] [2018-06-23 13:38:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[DEBUG] [2018-06-23 13:38:17][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 0ms
[DEBUG] [2018-06-23 13:38:27][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[DEBUG] [2018-06-23 13:38:37][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[DEBUG] [2018-06-23 13:38:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[DEBUG] [2018-06-23 13:38:57][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[DEBUG] [2018-06-23 13:39:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0004 after 1ms
[INFO] [2018-06-23 13:39:16][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:16][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4898&timestamp=1529732247197], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4898&timestamp=1529732247197, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:16][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 7,2  replyHeader:: 7,34,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4898%2526side%253Dprovider%2526timestamp%253D1529732247208,-1  response:: null
[INFO] [2018-06-23 13:39:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:16][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-06-23 13:39:16][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-06-23 13:39:16][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG] [2018-06-23 13:39:16][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642824c10f0004
[DEBUG] [2018-06-23 13:39:16][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642824c10f0004
[DEBUG] [2018-06-23 13:39:16][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0004, packet:: clientPath:null serverPath:null finished:false header:: 8,-11  replyHeader:: 8,35,0  request:: null response:: null
[DEBUG] [2018-06-23 13:39:16][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642824c10f0004
[DEBUG] [2018-06-23 13:39:16][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642824c10f0004 : Unable to read additional data from server sessionid 0x1642824c10f0004, likely server has closed socket
[INFO] [2018-06-23 13:39:16][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 13:39:16][org.apache.zookeeper.ZooKeeper]Session: 0x1642824c10f0004 closed
[DEBUG] [2018-06-23 13:39:16][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-06-23 13:39:26][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:26][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:26][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:26][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:31][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:31][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:31][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:39:31][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7248989f: startup date [Sat Jun 23 13:39:31 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:39:31][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:31][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:31][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:39:31][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:39:31][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7248989f: org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:39:31][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@862ef09]
[DEBUG] [2018-06-23 13:39:31][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@cd4cdd5]
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@77ce6256: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:39:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:39:32][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6ab1e7b5]
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&pid=4903&registry=zookeeper&timestamp=1529732372278, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-provider-127.0.0.1:2181.cache, data: {com.lava.lavafaq.service.DemoService=empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.common.concurrent.ExecutionList] [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.3.3/zookeeper-3.3.3.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@7d7d7924
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Opening socket connection to server /127.0.0.1:2181
[DEBUG] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642824c10f0006, negotiated timeout = 30000
[DEBUG] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-06-23 13:39:32][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,36,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response:: s{6,6,1529732078219,1529732078219,0,6,0,0,0,0,34} 
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,37,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4903%2526side%253Dprovider%2526timestamp%253D1529732372288,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4903%2526side%253Dprovider%2526timestamp%253D1529732372288 
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,37,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,38,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,38,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 13:39:32][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 6,8  replyHeader:: 6,38,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{} 
[INFO] [2018-06-23 13:39:32][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:32][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:39:32][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:39:32][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:39:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:39:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:39:51][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:51][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:51][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:39:51][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: startup date [Sat Jun 23 13:39:51 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:39:51][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:51][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:39:51][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:39:51][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:39:51][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-06-23 13:39:52][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: org.springframework.beans.factory.support.DefaultListableBeanFactory@4aee4b87: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:39:52][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@41941fd2]
[DEBUG] [2018-06-23 13:39:52][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5a5dae04]
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4aee4b87: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:39:52][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@722d6636]
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:39:52][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 13:39:52][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 13:39:52][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:39:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:52][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-consumer-127.0.0.1:2181.cache, data: {com.lava.lavafaq.service.DemoService=dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4898&side=provider&timestamp=1529732247208 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4899&side=consumer&timestamp=1529732256272}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:52][com.alibaba.dubbo.common.concurrent.ExecutionList] [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
[INFO] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.3.3/zookeeper-3.3.3.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@45c4d981
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[DEBUG] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Opening socket connection to server /127.0.0.1:2181
[DEBUG] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642824c10f0007, negotiated timeout = 30000
[DEBUG] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-06-23 13:39:52][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:52][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,39,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,F  response:: s{17,17,1529732219507,1529732219507,0,4,0,0,0,0,32} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,40,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4905%2526side%253Dconsumer%2526timestamp%253D1529732392512,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4905%2526side%253Dconsumer%2526timestamp%253D1529732392512 
[INFO] [2018-06-23 13:39:52][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,40,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,41,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,41,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: s{6,6,1529732078219,1529732078219,0,7,0,0,0,1,37} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 6,8  replyHeader:: 6,41,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4903%2526side%253Dprovider%2526timestamp%253D1529732372288} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 7,3  replyHeader:: 7,41,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 8,1  replyHeader:: 8,42,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,42,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 10,8  replyHeader:: 10,42,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 11,3  replyHeader:: 11,42,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,43,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,43,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: s{21,21,1529732219548,1529732219548,0,0,0,0,0,0,21} 
[DEBUG] [2018-06-23 13:39:52][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 14,8  replyHeader:: 14,43,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: v{} 
[INFO] [2018-06-23 13:39:52][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, urls: [dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.10.102:20880 from NettyClient 192.168.10.102 using dubbo version 2.6.1, channel is NettyChannel [channel=[id: 0x6b3027a3, /192.168.10.102:65303 => /192.168.10.102:20880]], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient fengjinandeAir.lan/192.168.10.102 connect to the server /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.lava.lavafaq.service.DemoService from url zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&register.ip=192.168.10.102&remote.timestamp=1529732372288&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:53][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:53][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4905&timestamp=1529732392563], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4905&timestamp=1529732392563, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:53][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 15,2  replyHeader:: 15,44,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4905%2526side%253Dconsumer%2526timestamp%253D1529732392512,-1  response:: null
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:39:53][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:39:53][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-06-23 13:39:53][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-06-23 13:39:53][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG] [2018-06-23 13:39:53][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642824c10f0007
[DEBUG] [2018-06-23 13:39:53][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642824c10f0007
[DEBUG] [2018-06-23 13:39:53][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0007, packet:: clientPath:null serverPath:null finished:false header:: 16,-11  replyHeader:: 16,45,0  request:: null response:: null
[DEBUG] [2018-06-23 13:39:53][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642824c10f0007
[INFO] [2018-06-23 13:39:53][org.apache.zookeeper.ZooKeeper]Session: 0x1642824c10f0007 closed
[INFO] [2018-06-23 13:39:53][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 13:39:53][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642824c10f0007 : Unable to read additional data from server sessionid 0x1642824c10f0007, likely server has closed socket
[DEBUG] [2018-06-23 13:39:53][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[DEBUG] [2018-06-23 13:40:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 0ms
[INFO] [2018-06-23 13:40:03][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /192.168.10.102:65303-->/192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:40:03][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x6b3027a3, /192.168.10.102:65303 => /192.168.10.102:20880], dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 13:40:03][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.10.102:20880. You can graceful shutdown now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:40:03][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:20880,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&register.ip=192.168.10.102&remote.timestamp=1529732372288&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:40:03][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:65303,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:40:03][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 192.168.10.102:0-->192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:40:03][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4905&register.ip=192.168.10.102&remote.timestamp=1529732372288&side=consumer&timestamp=1529732392512, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:40:12][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 0ms
[DEBUG] [2018-06-23 13:40:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:40:32][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:40:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:40:52][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:41:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:41:12][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:41:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:41:32][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:41:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 0ms
[DEBUG] [2018-06-23 13:41:52][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 0ms
[DEBUG] [2018-06-23 13:42:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:42:12][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:42:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:42:32][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:42:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:42:52][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:43:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:43:12][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:43:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:43:32][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:43:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:43:52][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:44:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:44:12][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:44:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:44:32][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:44:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:44:52][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[DEBUG] [2018-06-23 13:45:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642824c10f0006 after 1ms
[INFO] [2018-06-23 13:45:06][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:06][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4903&timestamp=1529732372278], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:06][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&client=zkclient&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=4903&timestamp=1529732372278, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:06][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:06][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 7,2  replyHeader:: 7,46,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D4903%2526side%253Dprovider%2526timestamp%253D1529732372288,-1  response:: null
[INFO] [2018-06-23 13:45:06][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:06][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:06][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:06][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-06-23 13:45:06][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-06-23 13:45:06][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to 127.0.0.1:2181
[DEBUG] [2018-06-23 13:45:06][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642824c10f0006
[DEBUG] [2018-06-23 13:45:06][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642824c10f0006
[DEBUG] [2018-06-23 13:45:06][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642824c10f0006, packet:: clientPath:null serverPath:null finished:false header:: 8,-11  replyHeader:: 8,47,0  request:: null response:: null
[DEBUG] [2018-06-23 13:45:06][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642824c10f0006
[DEBUG] [2018-06-23 13:45:06][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642824c10f0006 : Unable to read additional data from server sessionid 0x1642824c10f0006, likely server has closed socket
[INFO] [2018-06-23 13:45:06][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 13:45:06][org.apache.zookeeper.ZooKeeper]Session: 0x1642824c10f0006 closed
[DEBUG] [2018-06-23 13:45:06][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-06-23 13:45:16][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:16][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:16][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:16][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4903&side=provider&timestamp=1529732372288, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:45:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:45:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:45:54][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: startup date [Sat Jun 23 13:45:54 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:45:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:45:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:45:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:45:54][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:45:54][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7c1c2956: org.springframework.beans.factory.support.DefaultListableBeanFactory@29399f26: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:45:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@64e4804a]
[DEBUG] [2018-06-23 13:45:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5f556d56]
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29399f26: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:45:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:45:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:45:55][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3c77a535]
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:45:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:45:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4920&side=provider&timestamp=1529732755198, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4920&side=provider&timestamp=1529732755198 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=4920&registry=zookeeper&timestamp=1529732755185, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:55][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:45:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:45:55][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:46:05][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:46:05][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:46:05][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4920&side=provider&timestamp=1529732755198, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:46:05][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4920&side=provider&timestamp=1529732755198, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:15][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:56:15][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:56:15][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:56:15][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2f354a1a: startup date [Sat Jun 23 13:56:15 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 13:56:15][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:56:15][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 13:56:15][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 13:56:15][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 13:56:15][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2f354a1a: org.springframework.beans.factory.support.DefaultListableBeanFactory@4093d9c7: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:56:15][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@222661f8]
[DEBUG] [2018-06-23 13:56:15][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7de41969]
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4093d9c7: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:56:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:56:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 13:56:16][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@52ff5996]
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 13:56:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 13:56:16][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:16][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:16][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4938&side=provider&timestamp=1529733376114, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:16][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4938&side=provider&timestamp=1529733376114 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=4938&registry=zookeeper&timestamp=1529733376101, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:16][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 13:56:16][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:16][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:16][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:26][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:26][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:26][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4938&side=provider&timestamp=1529733376114, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 13:56:26][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4938&side=provider&timestamp=1529733376114, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:48][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:08:48][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:08:48][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:08:48][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@3617a35c: startup date [Sat Jun 23 14:08:48 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:08:48][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:08:48][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:08:48][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:08:48][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:08:48][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:08:48][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:08:48][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:08:48][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:08:48][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:08:48][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:08:49][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@3617a35c: org.springframework.beans.factory.support.DefaultListableBeanFactory@4c7da1fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:08:49][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2b4ef62f]
[DEBUG] [2018-06-23 14:08:49][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6c9fa659]
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4c7da1fc: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:08:49][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3c77a535]
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:08:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4971&side=provider&timestamp=1529734129511, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4971&side=provider&timestamp=1529734129511 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=4971&registry=zookeeper&timestamp=1529734129496, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:08:49][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:49][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:59][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:59][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:59][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4971&side=provider&timestamp=1529734129511, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:08:59][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=4971&side=provider&timestamp=1529734129511, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:24][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:17:24][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:17:24][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:17:24][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@49e608c2: startup date [Sat Jun 23 14:17:24 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:17:24][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:17:24][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:17:24][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:17:24][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:17:24][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:17:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:17:25][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:17:25][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@49e608c2: org.springframework.beans.factory.support.DefaultListableBeanFactory@2bb04fbf: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:17:25][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6a18c2f9]
[DEBUG] [2018-06-23 14:17:25][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1aab8583]
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2bb04fbf: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:17:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:17:25][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@55cfa262]
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:17:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:17:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:26][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:26][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5001&side=provider&timestamp=1529734645972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:26][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5001&side=provider&timestamp=1529734645972 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5001&registry=zookeeper&timestamp=1529734645957, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:26][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:17:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:26][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:26][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:36][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:36][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:36][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5001&side=provider&timestamp=1529734645972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:17:36][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5001&side=provider&timestamp=1529734645972, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:24][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:23:24][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:23:24][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:23:24][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2f354a1a: startup date [Sat Jun 23 14:23:24 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:23:24][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:23:24][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:23:24][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:23:24][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:23:24][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2f354a1a: org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:23:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5e9f24c]
[DEBUG] [2018-06-23 14:23:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@a407d11]
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:23:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:23:25][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7394547c]
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:23:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:23:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5014&side=provider&timestamp=1529735005304, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5014&side=provider&timestamp=1529735005304 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5014&registry=zookeeper&timestamp=1529735005290, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:25][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:23:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:25][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:35][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:35][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:35][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5014&side=provider&timestamp=1529735005304, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:23:35][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5014&side=provider&timestamp=1529735005304, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:24:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:24:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:24:53][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5394092c: startup date [Sat Jun 23 14:24:53 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:24:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:24:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:24:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:24:53][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:24:53][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@5394092c: org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:24:53][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5e9f24c]
[DEBUG] [2018-06-23 14:24:53][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@a407d11]
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:24:53][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:24:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:24:54][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7a52b16b]
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:24:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:24:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:24:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:24:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5018&side=provider&timestamp=1529735094130, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:24:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5018&side=provider&timestamp=1529735094130 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5018&registry=zookeeper&timestamp=1529735094117, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:24:54][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:24:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:24:54][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:24:54][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:25:04][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:25:04][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:25:04][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5018&side=provider&timestamp=1529735094130, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:25:04][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5018&side=provider&timestamp=1529735094130, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:26:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:26:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:26:32][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2f354a1a: startup date [Sat Jun 23 14:26:32 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:26:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:26:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:26:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:26:32][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:26:32][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:26:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:26:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:26:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:26:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:26:33][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2f354a1a: org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:26:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5e9f24c]
[DEBUG] [2018-06-23 14:26:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@a407d11]
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:26:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@f36d42c]
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:26:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5020&side=provider&timestamp=1529735193572, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5020&side=provider&timestamp=1529735193572 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5020&registry=zookeeper&timestamp=1529735193558, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:26:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:33][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:43][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:43][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:44][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5020&side=provider&timestamp=1529735193572, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:26:44][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5020&side=provider&timestamp=1529735193572, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:51][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:29:51][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:29:51][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:29:51][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7c472bc: startup date [Sat Jun 23 14:29:51 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:29:51][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:29:51][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:29:51][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:29:51][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:29:51][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7c472bc: org.springframework.beans.factory.support.DefaultListableBeanFactory@e3923e5: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:29:51][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@12a5547c]
[DEBUG] [2018-06-23 14:29:51][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@640b5459]
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e3923e5: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:29:51][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:29:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:29:52][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5df50665]
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:29:52][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:29:52][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:29:52][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:29:52][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5034&side=provider&timestamp=1529735392125, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:29:52][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5034&side=provider&timestamp=1529735392125 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5034&registry=zookeeper&timestamp=1529735392110, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:29:52][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:29:52][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:29:52][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:29:52][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:02][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:02][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:02][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5034&side=provider&timestamp=1529735392125, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:02][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5034&side=provider&timestamp=1529735392125, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:16][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:30:16][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:30:16][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:30:16][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 14:30:16 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:30:16][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:30:16][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:30:16][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:30:16][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:30:16][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@4093d9c7: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:30:16][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@222661f8]
[DEBUG] [2018-06-23 14:30:16][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7de41969]
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4093d9c7: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:30:16][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:30:17][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@52ff5996]
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:30:17][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:30:17][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:17][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:17][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5036&side=provider&timestamp=1529735417354, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:17][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5036&side=provider&timestamp=1529735417354 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5036&registry=zookeeper&timestamp=1529735417341, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:17][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:30:17][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:17][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:17][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:27][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:27][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:27][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5036&side=provider&timestamp=1529735417354, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:30:27][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5036&side=provider&timestamp=1529735417354, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:34:23][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: startup date [Sat Jun 23 14:34:23 CST 2018]; root of context hierarchy
[INFO] [2018-06-23 14:34:23][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5394092c: startup date [Sat Jun 23 14:34:23 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:34:23][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[INFO] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:34:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:34:24][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:34:24][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:34:24][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@5394092c: org.springframework.beans.factory.support.DefaultListableBeanFactory@11b1db9a: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:34:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5e7175af]
[DEBUG] [2018-06-23 14:34:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@609acf2c]
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@11b1db9a: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:34:24][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5e9f24c]
[DEBUG] [2018-06-23 14:34:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@a407d11]
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2abeb8f0: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:25][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@f36d42c]
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:34:25][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7394547c]
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:34:25][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5047&side=provider&timestamp=1529735665314, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5047&side=provider&timestamp=1529735665314 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5047&registry=zookeeper&timestamp=1529735665287, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5048&side=provider&timestamp=1529735665363, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5048&side=provider&timestamp=1529735665363 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5048&registry=zookeeper&timestamp=1529735665336, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:34:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:25][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:35][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5048&side=provider&timestamp=1529735665363, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:35][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5048&side=provider&timestamp=1529735665363, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:35][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:35][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:36][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5047&side=provider&timestamp=1529735665314, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:34:36][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5047&side=provider&timestamp=1529735665314, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:01][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:01][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:01][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:38:01][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: startup date [Sat Jun 23 14:38:01 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:38:01][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:01][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:01][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:38:01][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:38:01][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:38:01][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7fa89fd9]
[DEBUG] [2018-06-23 14:38:01][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:01][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:01][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:01][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@f36d42c]
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:38:01][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:38:01][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:02][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:02][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:02][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5081&registry=zookeeper&timestamp=1529735881959, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:02][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:02][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 14:38:02][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 14:38:02][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 14:38:02][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 14:38:02][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@5e59b96d
[DEBUG] [2018-06-23 14:38:02][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 14:38:02][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 14:38:02][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 14:38:02][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 14:38:02][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:03][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:03][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:04][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:04][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:05][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:05][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:06][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:07][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:08][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:08][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:08][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 14:38:09][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:09][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:09][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 14:38:09][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 14:38:09][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 14:38:10][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:10][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:11][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:11][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:11][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:11][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5081&timestamp=1529735881959], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:11][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5081&timestamp=1529735881959, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:11][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:12][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:12][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:13][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:13][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:13][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:13][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 14:38:14][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:14][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:14][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 14:38:15][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 14:38:15][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:15][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:15][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 14:38:15][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 14:38:16][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:16][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:16][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:16][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:17][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D5081%26side%3Dprovider%26timestamp%3D1529735881972
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 14:38:18][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 14:38:18][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 14:38:18][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 14:38:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 14:38:18][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D5081%26side%3Dprovider%26timestamp%3D1529735881972
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 14:38:18][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 14:38:18][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972 to registry zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5081&timestamp=1529735881959 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972 to registry localhost:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972 to zookeeper zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5081&timestamp=1529735881959, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D5081%26side%3Dprovider%26timestamp%3D1529735881972, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972 to registry localhost:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972 to zookeeper zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5081&timestamp=1529735881959, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D5081%26side%3Dprovider%26timestamp%3D1529735881972
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972 to zookeeper zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5081&timestamp=1529735881959, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D5081%26side%3Dprovider%26timestamp%3D1529735881972
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D5081%26side%3Dprovider%26timestamp%3D1529735881972
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D5081%26side%3Dprovider%26timestamp%3D1529735881972
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 14:38:18][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 14:38:18][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 14:38:18][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 14:38:18][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 14:38:18][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 14:38:18][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 14:38:19][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 14:38:19][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 14:38:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 14:38:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 14:38:19][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 14:38:19][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 14:38:19][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 14:38:29][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:29][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:29][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:29][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5081&side=provider&timestamp=1529735881972, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:38:32][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 14:38:32 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:38:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:38:32][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:38:32][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:38:32][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-23 14:38:32][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:32][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:32][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@52ff5996]
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5095&registry=zookeeper&timestamp=1529735913169, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:33][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 14:38:33][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 14:38:33][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 14:38:33][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 14:38:33][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@2abc60d6
[DEBUG] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 14:38:33][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642b5d790a0000, negotiated timeout = 40000
[DEBUG] [2018-06-23 14:38:33][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-06-23 14:38:33][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[DEBUG] [2018-06-23 14:38:33][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[DEBUG] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0000, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,48,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response:: s{6,6,1529732078219,1529732078219,0,8,0,0,0,0,46} 
[DEBUG] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,49,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5095%2526side%253Dprovider%2526timestamp%253D1529735913183,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5095%2526side%253Dprovider%2526timestamp%253D1529735913183 
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0000, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,49,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,50,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:38:33][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0000, packet:: clientPath:null serverPath:null finished:false header:: 5,12  replyHeader:: 5,50,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[INFO] [2018-06-23 14:38:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:33][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 14:38:33][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 14:38:33][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:38:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:38:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:38:49][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:49][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:49][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:38:49][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c404baf: startup date [Sat Jun 23 14:38:49 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:38:49][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:49][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:38:49][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:38:49][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-06-23 14:38:49][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1c404baf: org.springframework.beans.factory.support.DefaultListableBeanFactory@452250ef: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:38:49][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2d6bcf8a]
[DEBUG] [2018-06-23 14:38:49][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@76c3ba66]
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@452250ef: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:38:49][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:38:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@367dd26e]
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:38:50][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 14:38:50][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 14:38:50][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:38:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:50][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 14:38:50][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 14:38:50][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 14:38:50][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 14:38:50][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@74a77044
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 14:38:50][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642b5d790a0001, negotiated timeout = 40000
[DEBUG] [2018-06-23 14:38:50][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-06-23 14:38:50][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[INFO] [2018-06-23 14:38:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,51,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,F  response:: s{17,17,1529732219507,1529732219507,0,6,0,0,0,0,44} 
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,52,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5097%2526side%253Dconsumer%2526timestamp%253D1529735930328,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5097%2526side%253Dconsumer%2526timestamp%253D1529735930328 
[INFO] [2018-06-23 14:38:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,52,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,53,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 5,12  replyHeader:: 5,53,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5095%2526side%253Dprovider%2526timestamp%253D1529735913183},s{6,6,1529732078219,1529732078219,0,9,0,0,0,1,49} 
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 6,3  replyHeader:: 6,53,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,54,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 8,12  replyHeader:: 8,54,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,54,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,55,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:38:50][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 11,12  replyHeader:: 11,55,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: v{},s{21,21,1529732219548,1529732219548,0,0,0,0,0,0,21} 
[INFO] [2018-06-23 14:38:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, urls: [dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:50][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.10.102:20880 from NettyClient 192.168.10.102 using dubbo version 2.6.1, channel is NettyChannel [channel=[id: 0x275369c0, /192.168.10.102:50282 => /192.168.10.102:20880]], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:50][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient fengjinandeAir.lan/192.168.10.102 connect to the server /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:51][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.lava.lavafaq.service.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&register.ip=192.168.10.102&remote.timestamp=1529735913183&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:51][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:51][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5097&timestamp=1529735930384], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5097&timestamp=1529735930384, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:51][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 12,2  replyHeader:: 12,56,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5097%2526side%253Dconsumer%2526timestamp%253D1529735930328,-1  response:: null
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:38:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:38:51][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 14:38:51][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 14:38:51][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 14:38:51][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 14:38:51][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642b5d790a0001
[DEBUG] [2018-06-23 14:38:51][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642b5d790a0001
[DEBUG] [2018-06-23 14:38:51][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0001, packet:: clientPath:null serverPath:null finished:false header:: 13,-11  replyHeader:: 13,57,0  request:: null response:: null
[DEBUG] [2018-06-23 14:38:51][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642b5d790a0001
[INFO] [2018-06-23 14:38:51][org.apache.zookeeper.ZooKeeper]Session: 0x1642b5d790a0001 closed
[INFO] [2018-06-23 14:38:51][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 14:39:00][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[INFO] [2018-06-23 14:39:01][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /192.168.10.102:50282-->/192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:39:01][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x275369c0, /192.168.10.102:50282 => /192.168.10.102:20880], dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 14:39:01][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.10.102:20880. You can graceful shutdown now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:39:01][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:20880,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&register.ip=192.168.10.102&remote.timestamp=1529735913183&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:39:01][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:50282,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:39:01][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 192.168.10.102:0-->192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:39:01][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&register.ip=192.168.10.102&remote.timestamp=1529735913183&side=consumer&timestamp=1529735930328, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:39:13][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:39:27][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:39:40][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:39:53][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:40:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:40:20][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:40:33][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:40:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:41:00][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[DEBUG] [2018-06-23 14:41:13][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0000 after 1ms
[INFO] [2018-06-23 14:41:17][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:17][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5095&timestamp=1529735913169], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:17][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5095&timestamp=1529735913169, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:17][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:41:17][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0000, packet:: clientPath:null serverPath:null finished:false header:: 6,2  replyHeader:: 6,58,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5095%2526side%253Dprovider%2526timestamp%253D1529735913183,-1  response:: null
[INFO] [2018-06-23 14:41:17][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:17][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:17][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:41:17][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 14:41:17][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 14:41:17][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 14:41:17][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 14:41:17][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642b5d790a0000
[DEBUG] [2018-06-23 14:41:17][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642b5d790a0000
[DEBUG] [2018-06-23 14:41:17][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0000, packet:: clientPath:null serverPath:null finished:false header:: 7,-11  replyHeader:: 7,59,0  request:: null response:: null
[DEBUG] [2018-06-23 14:41:17][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642b5d790a0000
[DEBUG] [2018-06-23 14:41:17][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642b5d790a0000 : Unable to read additional data from server sessionid 0x1642b5d790a0000, likely server has closed socket
[INFO] [2018-06-23 14:41:17][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 14:41:17][org.apache.zookeeper.ZooKeeper]Session: 0x1642b5d790a0000 closed
[INFO] [2018-06-23 14:41:27][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:27][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:27][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:41:27][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:33][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:43:33][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:43:33][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:43:33][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 14:43:33 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:43:33][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:43:33][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:43:33][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:43:33][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:43:33][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:43:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-23 14:43:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:43:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:43:34][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3c77a535]
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5111&registry=zookeeper&timestamp=1529736214026, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-provider-localhost:2181.cache, data: {com.lava.lavafaq.service.DemoService=empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:43:34][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 14:43:34][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 14:43:34][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 14:43:34][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 14:43:34][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@66202088
[DEBUG] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 14:43:34][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642b5d790a0002, negotiated timeout = 40000
[DEBUG] [2018-06-23 14:43:34][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-06-23 14:43:34][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[DEBUG] [2018-06-23 14:43:34][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[DEBUG] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0002, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,60,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response:: s{6,6,1529732078219,1529732078219,0,10,0,0,0,0,58} 
[DEBUG] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,61,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5111%2526side%253Dprovider%2526timestamp%253D1529736214040,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5111%2526side%253Dprovider%2526timestamp%253D1529736214040 
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0002, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,61,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,62,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:43:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0002, packet:: clientPath:null serverPath:null finished:false header:: 5,12  replyHeader:: 5,62,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[INFO] [2018-06-23 14:43:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:43:34][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 14:43:34][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 14:43:34][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:43:34][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:43:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0002 after 1ms
[DEBUG] [2018-06-23 14:44:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0002 after 1ms
[DEBUG] [2018-06-23 14:44:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0002 after 1ms
[DEBUG] [2018-06-23 14:44:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0002 after 1ms
[DEBUG] [2018-06-23 14:44:39][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:44:39][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:44:39][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:44:39][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4128dca6: startup date [Sat Jun 23 14:44:39 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:44:39][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:44:39][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:44:39][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:44:39][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-06-23 14:44:39][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@4128dca6: org.springframework.beans.factory.support.DefaultListableBeanFactory@4fef9e5e: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:44:39][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1068452]
[DEBUG] [2018-06-23 14:44:39][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2c02bb74]
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4fef9e5e: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:44:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:44:40][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7e824fb4]
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:44:40][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 14:44:40][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 14:44:40][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:44:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:40][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-consumer-localhost:2181.cache, data: {com.lava.lavafaq.service.DemoService=dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5095&side=provider&timestamp=1529735913183 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5097&side=consumer&timestamp=1529735930328}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:40][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 14:44:40][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 14:44:40][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 14:44:40][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 14:44:40][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@74a77044
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 14:44:40][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642b5d790a0003, negotiated timeout = 40000
[DEBUG] [2018-06-23 14:44:40][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-06-23 14:44:40][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[INFO] [2018-06-23 14:44:40][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,63,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,F  response:: s{17,17,1529732219507,1529732219507,0,8,0,0,0,0,56} 
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,64,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5115%2526side%253Dconsumer%2526timestamp%253D1529736280306,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5115%2526side%253Dconsumer%2526timestamp%253D1529736280306 
[INFO] [2018-06-23 14:44:40][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,64,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,65,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 5,12  replyHeader:: 5,65,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5111%2526side%253Dprovider%2526timestamp%253D1529736214040},s{6,6,1529732078219,1529732078219,0,11,0,0,0,1,61} 
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 6,3  replyHeader:: 6,65,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,66,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 8,12  replyHeader:: 8,66,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,66,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,67,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:44:40][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 11,12  replyHeader:: 11,67,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: v{},s{21,21,1529732219548,1529732219548,0,0,0,0,0,0,21} 
[INFO] [2018-06-23 14:44:40][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, urls: [dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:40][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.10.102:20880 from NettyClient 192.168.10.102 using dubbo version 2.6.1, channel is NettyChannel [channel=[id: 0x7e5388f4, /192.168.10.102:50394 => /192.168.10.102:20880]], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient fengjinandeAir.lan/192.168.10.102 connect to the server /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:41][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:41][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:41][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.lava.lavafaq.service.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&register.ip=192.168.10.102&remote.timestamp=1529736214040&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:41][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:41][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5115&timestamp=1529736280350], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5115&timestamp=1529736280350, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:41][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 12,2  replyHeader:: 12,68,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5115%2526side%253Dconsumer%2526timestamp%253D1529736280306,-1  response:: null
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:41][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 14:44:41][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 14:44:41][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 14:44:41][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 14:44:41][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642b5d790a0003
[DEBUG] [2018-06-23 14:44:41][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642b5d790a0003
[DEBUG] [2018-06-23 14:44:41][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0003, packet:: clientPath:null serverPath:null finished:false header:: 13,-11  replyHeader:: 13,69,0  request:: null response:: null
[DEBUG] [2018-06-23 14:44:41][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642b5d790a0003
[INFO] [2018-06-23 14:44:41][org.apache.zookeeper.ZooKeeper]Session: 0x1642b5d790a0003 closed
[INFO] [2018-06-23 14:44:41][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 14:44:41][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642b5d790a0003 : Unable to read additional data from server sessionid 0x1642b5d790a0003, likely server has closed socket
[DEBUG] [2018-06-23 14:44:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0002 after 1ms
[INFO] [2018-06-23 14:44:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /192.168.10.102:50394-->/192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:51][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x7e5388f4, /192.168.10.102:50394 => /192.168.10.102:20880], dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 14:44:51][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.10.102:20880. You can graceful shutdown now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:20880,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&register.ip=192.168.10.102&remote.timestamp=1529736214040&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:50394,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 192.168.10.102:0-->192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:44:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&register.ip=192.168.10.102&remote.timestamp=1529736214040&side=consumer&timestamp=1529736280306, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:44:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0002 after 1ms
[DEBUG] [2018-06-23 14:45:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0002 after 1ms
[INFO] [2018-06-23 14:45:12][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:12][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5111&timestamp=1529736214026], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5111&timestamp=1529736214026, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:12][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0002, packet:: clientPath:null serverPath:null finished:false header:: 6,2  replyHeader:: 6,70,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5111%2526side%253Dprovider%2526timestamp%253D1529736214040,-1  response:: null
[INFO] [2018-06-23 14:45:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:12][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:12][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 14:45:12][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 14:45:12][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 14:45:12][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 14:45:12][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642b5d790a0002
[DEBUG] [2018-06-23 14:45:12][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642b5d790a0002
[DEBUG] [2018-06-23 14:45:12][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0002, packet:: clientPath:null serverPath:null finished:false header:: 7,-11  replyHeader:: 7,71,0  request:: null response:: null
[DEBUG] [2018-06-23 14:45:12][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642b5d790a0002
[DEBUG] [2018-06-23 14:45:12][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642b5d790a0002 : Unable to read additional data from server sessionid 0x1642b5d790a0002, likely server has closed socket
[INFO] [2018-06-23 14:45:12][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 14:45:12][org.apache.zookeeper.ZooKeeper]Session: 0x1642b5d790a0002 closed
[INFO] [2018-06-23 14:45:22][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:22][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:22][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:22][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:45:26][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: startup date [Sat Jun 23 14:45:26 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:45:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:45:26][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 14:45:26][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:45:26][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7fa89fd9]
[DEBUG] [2018-06-23 14:45:26][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:45:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:45:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:26][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:45:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@32adfbf1]
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=5116&registry=zookeeper&timestamp=1529736327065, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-provider-localhost:2181.cache, data: {com.lava.lavafaq.service.DemoService=empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:27][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 14:45:27][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 14:45:27][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 14:45:27][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 14:45:27][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@66202088
[DEBUG] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 14:45:27][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642b5d790a0004, negotiated timeout = 40000
[DEBUG] [2018-06-23 14:45:27][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-06-23 14:45:27][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[DEBUG] [2018-06-23 14:45:27][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[DEBUG] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0004, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,72,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response:: s{6,6,1529732078219,1529732078219,0,12,0,0,0,0,70} 
[DEBUG] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,73,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5116%2526side%253Dprovider%2526timestamp%253D1529736327078,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5116%2526side%253Dprovider%2526timestamp%253D1529736327078 
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0004, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,73,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,74,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:45:27][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0004, packet:: clientPath:null serverPath:null finished:false header:: 5,12  replyHeader:: 5,74,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[INFO] [2018-06-23 14:45:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:27][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 14:45:27][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 14:45:27][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:45:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 14:45:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:45:32][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c404baf: startup date [Sat Jun 23 14:45:32 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 14:45:32][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:32][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 14:45:32][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 14:45:32][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-06-23 14:45:32][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 14:45:33][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-06-23 14:45:33][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1c404baf: org.springframework.beans.factory.support.DefaultListableBeanFactory@452250ef: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:45:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2d6bcf8a]
[DEBUG] [2018-06-23 14:45:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@76c3ba66]
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@452250ef: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:45:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 14:45:33][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@367dd26e]
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:45:33][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-06-23 14:45:33][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-06-23 14:45:33][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 14:45:33][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 14:45:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/fengjinan/.dubbo/dubbo-registry-demo-consumer-localhost:2181.cache, data: {com.lava.lavafaq.service.DemoService=dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5111&side=provider&timestamp=1529736214040 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306 empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5115&side=consumer&timestamp=1529736280306}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:33][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 14:45:33][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 14:45:33][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 14:45:33][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 14:45:33][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@4daea558
[DEBUG] [2018-06-23 14:45:33][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 14:45:33][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[DEBUG] [2018-06-23 14:45:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ClientCnxn]Socket connection established to localhost/127.0.0.1:2181, initiating session
[DEBUG] [2018-06-23 14:45:33][org.apache.zookeeper.ClientCnxn]Session establishment request sent on localhost/127.0.0.1:2181
[INFO] [2018-06-23 14:45:33][org.apache.zookeeper.ClientCnxn]Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1642b5d790a0005, negotiated timeout = 40000
[DEBUG] [2018-06-23 14:45:33][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:33][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-06-23 14:45:33][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[DEBUG] [2018-06-23 14:45:33][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[INFO] [2018-06-23 14:45:33][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,75,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,F  response:: s{17,17,1529732219507,1529732219507,0,10,0,0,0,0,68} 
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,76,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5117%2526side%253Dconsumer%2526timestamp%253D1529736333665,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5117%2526side%253Dconsumer%2526timestamp%253D1529736333665 
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,76,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,77,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 5,12  replyHeader:: 5,77,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5116%2526side%253Dprovider%2526timestamp%253D1529736327078},s{6,6,1529732078219,1529732078219,0,13,0,0,0,1,73} 
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 6,3  replyHeader:: 6,77,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,78,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 8,12  replyHeader:: 8,78,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{8,8,1529732078232,1529732078232,0,0,0,0,0,0,8} 
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,78,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{5,5,1529732078216,1529732078216,0,4,0,0,0,4,21} 
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,79,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 11,12  replyHeader:: 11,79,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: v{},s{21,21,1529732219548,1529732219548,0,0,0,0,0,0,21} 
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, urls: [dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.10.102:20880 from NettyClient 192.168.10.102 using dubbo version 2.6.1, channel is NettyChannel [channel=[id: 0x264114a7, /192.168.10.102:50399 => /192.168.10.102:20880]], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient fengjinandeAir.lan/192.168.10.102 connect to the server /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.lava.lavafaq.service.DemoService from url zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&register.ip=192.168.10.102&remote.timestamp=1529736327078&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5117&timestamp=1529736333718], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5117&timestamp=1529736333718, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 12,2  replyHeader:: 12,80,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5117%2526side%253Dconsumer%2526timestamp%253D1529736333665,-1  response:: null
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:34][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 14:45:34][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 14:45:34][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 14:45:34][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642b5d790a0005
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642b5d790a0005
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0005, packet:: clientPath:null serverPath:null finished:false header:: 13,-11  replyHeader:: 13,81,0  request:: null response:: null
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642b5d790a0005
[DEBUG] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642b5d790a0005 : Unable to read additional data from server sessionid 0x1642b5d790a0005, likely server has closed socket
[INFO] [2018-06-23 14:45:34][org.apache.zookeeper.ZooKeeper]Session: 0x1642b5d790a0005 closed
[INFO] [2018-06-23 14:45:34][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-06-23 14:45:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[INFO] [2018-06-23 14:45:44][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /192.168.10.102:50399-->/192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:44][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x264114a7, /192.168.10.102:50399 => /192.168.10.102:20880], dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 14:45:44][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.10.102:20880. You can graceful shutdown now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:44][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:20880,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&register.ip=192.168.10.102&remote.timestamp=1529736327078&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:44][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:50399,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:44][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 192.168.10.102:0-->192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 14:45:44][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5117&register.ip=192.168.10.102&remote.timestamp=1529736327078&side=consumer&timestamp=1529736333665, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 14:45:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:46:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:46:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:46:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:46:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:47:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:47:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:47:27][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:47:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:47:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:48:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:48:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:48:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:48:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:49:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:49:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:49:27][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:49:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:49:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:50:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:50:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:50:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:50:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:51:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:51:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:51:27][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:51:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:51:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:52:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:52:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:52:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:52:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:53:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:53:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:53:27][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:53:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:53:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:54:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:54:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:54:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:54:47][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:55:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:55:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:55:27][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:55:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:55:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:56:07][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:56:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:56:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:56:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:57:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:57:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:57:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:57:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:57:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:58:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:58:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:58:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:58:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:59:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:59:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 14:59:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:59:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 14:59:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:00:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:00:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:00:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:00:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:01:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:01:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:01:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:01:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:01:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:02:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:02:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:02:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:02:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:03:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:03:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:03:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:03:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:03:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:04:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:04:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:04:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:04:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 2ms
[DEBUG] [2018-06-23 15:05:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:05:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:05:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:05:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:05:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:06:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 2ms
[DEBUG] [2018-06-23 15:06:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:06:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:06:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:07:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:07:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 2ms
[DEBUG] [2018-06-23 15:07:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:07:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:07:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:08:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:08:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:08:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:08:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:09:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:09:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:09:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:09:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:09:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:10:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:10:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:10:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:10:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:11:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:11:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:11:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:11:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:11:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:12:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:12:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:12:34][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:12:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:13:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:13:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:13:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:13:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:13:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:14:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:14:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:14:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:14:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:15:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:15:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:15:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:15:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:15:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:16:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:16:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:16:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:16:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:17:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:17:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:17:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:17:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:17:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:18:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:18:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:18:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:18:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:19:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:19:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:19:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:19:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:19:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:20:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:20:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:20:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:20:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:21:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:21:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:21:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:21:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:21:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:22:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:22:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:22:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:22:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:23:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:23:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:23:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 2ms
[DEBUG] [2018-06-23 15:23:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:23:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:24:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:24:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:24:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 4ms
[DEBUG] [2018-06-23 15:24:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:25:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:25:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:25:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:25:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:25:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:26:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:26:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:26:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 0ms
[DEBUG] [2018-06-23 15:26:48][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:27:01][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:27:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:27:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:27:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:27:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:28:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:28:21][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[DEBUG] [2018-06-23 15:28:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1642b5d790a0004 after 1ms
[INFO] [2018-06-23 15:28:41][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:41][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5116&timestamp=1529736327065], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=5116&timestamp=1529736327065, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 15:28:41][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0004, packet:: clientPath:null serverPath:null finished:false header:: 6,2  replyHeader:: 6,88,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D5116%2526side%253Dprovider%2526timestamp%253D1529736327078,-1  response:: null
[INFO] [2018-06-23 15:28:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 15:28:41][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 15:28:41][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 15:28:41][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 15:28:41][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 15:28:41][org.apache.zookeeper.ZooKeeper]Closing session: 0x1642b5d790a0004
[DEBUG] [2018-06-23 15:28:41][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1642b5d790a0004
[DEBUG] [2018-06-23 15:28:41][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1642b5d790a0004, packet:: clientPath:null serverPath:null finished:false header:: 7,-11  replyHeader:: 7,89,0  request:: null response:: null
[DEBUG] [2018-06-23 15:28:41][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1642b5d790a0004
[DEBUG] [2018-06-23 15:28:41][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1642b5d790a0004 : Unable to read additional data from server sessionid 0x1642b5d790a0004, likely server has closed socket
[INFO] [2018-06-23 15:28:41][org.apache.zookeeper.ZooKeeper]Session: 0x1642b5d790a0004 closed
[INFO] [2018-06-23 15:28:41][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 15:28:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:51][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 15:28:51][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=5116&side=provider&timestamp=1529736327078, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:29][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:19:29][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:19:29][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:19:29][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: startup date [Sat Jun 23 23:19:29 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:19:29][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:19:29][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:19:29][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:19:30][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:19:30][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:19:30][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7fa89fd9]
[DEBUG] [2018-06-23 23:19:30][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:19:30][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:19:30][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:19:31][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7a52b16b]
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:19:31][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:19:31][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:31][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:31][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:31][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6283&registry=zookeeper&timestamp=1529767171303, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:31][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:19:31][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:32][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:19:32][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:19:32][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:19:32][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:19:32][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@41cab830
[DEBUG] [2018-06-23 23:19:32][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:19:32][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:19:32][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 23:19:32][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 23:19:32][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:33][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:34][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:35][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:35][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:36][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:36][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:37][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:37][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:37][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:19:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:38][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:38][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:19:39][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:19:39][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:19:40][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:40][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:41][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:41][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:42][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:42][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:43][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:43][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:44][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:44][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:44][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:19:45][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:45][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:45][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:19:45][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:19:45][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:19:46][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:46][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:47][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:47][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:48][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:48][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:50][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:50][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:50][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:50][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:51][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:51][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:51][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:51][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:51][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:19:52][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:19:52][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-23 23:19:52][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:52][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:19:52][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:19:53][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:53][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:54][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:54][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:55][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:55][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:56][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:56][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:19:57][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:57][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:57][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:19:58][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:19:58][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:19:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:19:58][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:19:59][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:19:59][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:19:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:59][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6283&timestamp=1529767171303], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6283&timestamp=1529767171303, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:19:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:20:00][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:20:00][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:20:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:20:01][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:20:01][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:20:01][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:01][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:20:02][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:20:02][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:20:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:20:03][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:20:03][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:20:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:20:04][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:20:04][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:20:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:04][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6283%26side%3Dprovider%26timestamp%3D1529767171335
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-23 23:20:05][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:20:05][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-23 23:20:05][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:20:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:20:05][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6283%26side%3Dprovider%26timestamp%3D1529767171335
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:20:05][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:20:05][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6283&timestamp=1529767171303 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6283&timestamp=1529767171303, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6283%26side%3Dprovider%26timestamp%3D1529767171335, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6283&timestamp=1529767171303, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6283%26side%3Dprovider%26timestamp%3D1529767171335
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6283&timestamp=1529767171303, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6283%26side%3Dprovider%26timestamp%3D1529767171335
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6283%26side%3Dprovider%26timestamp%3D1529767171335
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6283%26side%3Dprovider%26timestamp%3D1529767171335
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:20:05][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:20:05][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:20:05][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:20:05][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:20:05][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:20:05][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:20:06][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:20:06][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:20:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:20:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:20:06][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:20:06][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:20:06][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:20:16][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:20:16][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:20:16][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:20:16][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6283&side=provider&timestamp=1529767171335, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:24][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:21:24][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:21:24][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:21:24][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 23:21:24 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:21:24][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:21:24][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:21:24][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:21:24][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:21:24][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:21:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-23 23:21:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:21:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:21:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@52ff5996]
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:21:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:21:24][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:25][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6285&registry=zookeeper&timestamp=1529767284959, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:25][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:21:25][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:25][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:21:25][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:21:25][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:21:25][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:21:25][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@4737f519
[DEBUG] [2018-06-23 23:21:25][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:21:25][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:21:25][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 23:21:25][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 23:21:25][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:26][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:26][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:27][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:27][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:28][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:28][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:30][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:30][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:31][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:31][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:31][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:21:32][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:32][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:32][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:21:32][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:21:32][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:21:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:33][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:34][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:35][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:35][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:36][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:36][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:37][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:37][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:37][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:21:38][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:21:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:38][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:38][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:21:38][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:21:39][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:39][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:41][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:41][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:42][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:42][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:43][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:43][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:44][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:44][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:44][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:21:45][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:45][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:45][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:21:45][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:21:45][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:21:46][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:46][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:47][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:47][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:48][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:48][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:49][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:49][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:51][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:51][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:51][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:51][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:51][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:21:52][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:21:52][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-23 23:21:52][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:52][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:21:52][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:21:52][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:52][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6285&timestamp=1529767284959], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:52][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6285&timestamp=1529767284959, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:52][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:21:53][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:53][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:54][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:54][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:55][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:55][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:56][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:56][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:21:57][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:21:57][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:57][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6285%26side%3Dprovider%26timestamp%3D1529767284972
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-23 23:21:58][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:21:58][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-23 23:21:58][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:21:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:21:58][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6285%26side%3Dprovider%26timestamp%3D1529767284972
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:21:58][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:21:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6285&timestamp=1529767284959 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6285&timestamp=1529767284959, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6285%26side%3Dprovider%26timestamp%3D1529767284972, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6285&timestamp=1529767284959, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6285%26side%3Dprovider%26timestamp%3D1529767284972
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6285&timestamp=1529767284959, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6285%26side%3Dprovider%26timestamp%3D1529767284972
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6285%26side%3Dprovider%26timestamp%3D1529767284972
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6285%26side%3Dprovider%26timestamp%3D1529767284972
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:21:58][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:21:58][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:21:58][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:21:58][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:21:58][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:21:58][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:21:59][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:21:59][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:21:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:21:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:22:00][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:22:00][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:22:00][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:22:10][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:22:10][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:22:10][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:22:10][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6285&side=provider&timestamp=1529767284972, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:07][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:23:07][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:23:07][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:23:07][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: startup date [Sat Jun 23 23:23:07 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:23:07][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:23:07][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:23:07][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:23:07][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:23:07][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:23:07][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:23:07][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:23:07][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:23:08][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:23:08][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:23:08][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-23 23:23:08][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:23:08][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4afe268a]
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:23:08][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:23:08][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:08][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:08][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:08][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6289&registry=zookeeper&timestamp=1529767388685, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:08][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:09][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:09][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:23:09][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:09][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:23:09][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:23:09][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:23:09][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:23:09][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@41cab830
[DEBUG] [2018-06-23 23:23:09][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:23:09][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:23:09][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 23:23:09][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 23:23:09][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:23:10][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:10][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:23:11][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:11][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:23:11][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:11][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6289&timestamp=1529767388685], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:11][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6289&timestamp=1529767388685, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:11][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:12][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:12][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:23:13][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:13][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:13][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:13][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:23:14][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:14][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:14][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:23:15][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:15][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:15][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:23:16][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:23:16][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:23:17][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:17][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:17][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:17][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:17][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6289%26side%3Dprovider%26timestamp%3D1529767388703
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-23 23:23:18][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:23:18][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:23:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:23:18][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:23:18][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6289%26side%3Dprovider%26timestamp%3D1529767388703
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:23:18][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:23:18][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6289&timestamp=1529767388685 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6289&timestamp=1529767388685, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6289%26side%3Dprovider%26timestamp%3D1529767388703, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6289&timestamp=1529767388685, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6289%26side%3Dprovider%26timestamp%3D1529767388703
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6289&timestamp=1529767388685, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6289%26side%3Dprovider%26timestamp%3D1529767388703
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6289%26side%3Dprovider%26timestamp%3D1529767388703
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6289%26side%3Dprovider%26timestamp%3D1529767388703
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:23:18][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:23:18][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:23:18][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:23:18][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:23:18][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:23:18][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:23:19][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:23:19][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:23:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:23:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:23:19][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:23:19][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:23:19][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:23:29][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:29][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:29][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:23:29][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6289&side=provider&timestamp=1529767388703, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:25:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:25:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:25:26][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: startup date [Sat Jun 23 23:25:26 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:25:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:25:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:25:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:25:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:25:26][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:25:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:25:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:25:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:25:27][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:25:27][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: org.springframework.beans.factory.support.DefaultListableBeanFactory@2bb04fbf: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:25:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6a18c2f9]
[DEBUG] [2018-06-23 23:25:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1aab8583]
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2bb04fbf: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:25:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@32adfbf1]
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:25:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:25:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6293&registry=zookeeper&timestamp=1529767527760, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:28][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:28][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:28][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:28][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:25:28][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:28][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:25:28][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:25:28][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:25:28][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:25:28][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@3d2f3481
[DEBUG] [2018-06-23 23:25:28][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:25:28][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:25:28][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 23:25:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 23:25:28][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:29][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:29][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:30][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:30][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:32][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:32][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:33][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:34][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:34][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:25:35][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:35][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:35][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:25:35][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:25:35][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:25:36][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:36][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:37][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:37][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:38][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:39][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:39][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:40][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:40][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:41][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:25:42][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:42][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:42][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:25:42][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:25:42][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:25:43][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:43][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:44][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:44][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:45][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:45][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:46][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:46][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:47][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:47][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:47][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:25:48][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:48][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:48][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:25:48][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:25:48][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:25:49][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:49][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:50][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:50][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:50][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:50][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:52][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:52][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:53][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:53][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:54][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:54][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:54][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:25:55][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:25:55][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:55][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:55][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:25:55][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:25:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:55][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6293&timestamp=1529767527760], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6293&timestamp=1529767527760, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:25:56][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:56][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:57][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:57][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:58][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:58][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:25:59][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:25:59][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:25:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:25:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:26:00][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:26:00][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:26:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:26:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:26:01][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6293%26side%3Dprovider%26timestamp%3D1529767527772
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:26:02][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:26:02][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:26:02][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:26:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:26:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:26:02][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6293%26side%3Dprovider%26timestamp%3D1529767527772
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:26:02][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:26:02][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6293&timestamp=1529767527760 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6293&timestamp=1529767527760, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6293%26side%3Dprovider%26timestamp%3D1529767527772, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6293&timestamp=1529767527760, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6293%26side%3Dprovider%26timestamp%3D1529767527772
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6293&timestamp=1529767527760, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6293%26side%3Dprovider%26timestamp%3D1529767527772
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6293%26side%3Dprovider%26timestamp%3D1529767527772
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6293%26side%3Dprovider%26timestamp%3D1529767527772
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:26:02][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:26:02][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:26:02][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:26:02][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:26:02][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:26:02][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:26:03][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:26:03][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:26:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:26:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:26:03][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:26:03][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:26:03][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:26:13][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:26:13][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:26:13][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:26:13][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6293&side=provider&timestamp=1529767527772, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:34:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:34:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:34:54][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 23:34:54 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:34:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:34:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:34:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:34:55][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:34:55][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@4093d9c7: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:34:55][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@222661f8]
[DEBUG] [2018-06-23 23:34:55][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7de41969]
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4093d9c7: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:34:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:34:55][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@52ff5996]
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:34:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:34:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:34:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:34:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:34:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6326&registry=zookeeper&timestamp=1529768095784, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:55][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:56][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:34:56][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:34:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:34:56][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:34:56][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:34:56][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:34:56][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:34:56][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@2abc60d6
[DEBUG] [2018-06-23 23:34:56][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:34:56][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:34:56][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 23:34:56][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 23:34:56][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:34:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:34:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:34:57][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:34:57][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:34:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:34:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:34:58][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:34:58][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:34:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:34:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:34:59][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:34:59][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:34:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:34:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:00][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:00][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:02][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:02][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:02][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:35:03][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:03][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:03][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:35:03][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:35:03][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:35:04][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:04][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:05][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:05][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:06][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:06][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:07][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:07][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:08][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:08][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:08][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:35:09][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:35:09][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:09][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:09][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:35:09][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:35:10][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:10][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:12][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:12][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:13][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:13][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:13][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:13][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:14][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:14][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:15][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:15][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:15][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:35:16][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:16][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:16][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:16][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:35:16][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:16][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:35:16][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:35:17][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:17][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:17][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:17][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:18][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:18][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:19][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:19][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:20][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:20][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:20][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:20][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:21][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:21][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:21][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:21][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:22][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:35:23][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:23][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:23][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:23][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:23][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:35:23][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:35:23][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:35:23][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:35:23][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6326&timestamp=1529768095784], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:35:23][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6326&timestamp=1529768095784, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:35:23][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:35:24][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:24][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:24][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:24][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:25][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:25][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:26][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:26][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:27][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:27][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:35:28][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:28][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:28][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6326%26side%3Dprovider%26timestamp%3D1529768095801
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:35:29][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:35:29][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:35:29][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:35:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:35:29][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6326%26side%3Dprovider%26timestamp%3D1529768095801
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:35:29][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:35:29][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6326&timestamp=1529768095784 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6326&timestamp=1529768095784, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6326%26side%3Dprovider%26timestamp%3D1529768095801, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6326&timestamp=1529768095784, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6326%26side%3Dprovider%26timestamp%3D1529768095801
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6326&timestamp=1529768095784, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6326%26side%3Dprovider%26timestamp%3D1529768095801
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6326%26side%3Dprovider%26timestamp%3D1529768095801
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6326%26side%3Dprovider%26timestamp%3D1529768095801
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:35:29][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:35:29][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:35:29][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:35:29][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:35:29][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:35:29][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:35:30][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:35:30][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:35:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:35:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:35:30][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:35:30][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:35:30][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:35:40][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:35:40][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:35:40][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:35:40][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6326&side=provider&timestamp=1529768095801, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:21][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:44:21][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:44:21][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:44:21][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: startup date [Sat Jun 23 23:44:21 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:44:21][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:44:21][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:44:21][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:44:21][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:44:21][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:44:21][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:44:21][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:44:21][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:44:22][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:44:22][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:44:22][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7fa89fd9]
[DEBUG] [2018-06-23 23:44:22][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:44:22][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4afe268a]
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:44:22][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:44:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:22][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6355&registry=zookeeper&timestamp=1529768662649, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:22][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:23][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:23][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:23][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:44:23][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:44:23][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:44:23][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:44:23][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@41cab830
[DEBUG] [2018-06-23 23:44:23][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:44:23][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:44:23][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[WARN] [2018-06-23 23:44:23][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[INFO] [2018-06-23 23:44:23][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:44:23][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:23][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:24][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:24][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:24][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:24][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:25][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:25][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:26][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:26][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:27][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:27][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:28][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:28][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:28][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:44:29][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:29][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:29][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:44:30][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:44:30][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:44:31][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:31][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:32][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:32][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:33][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:34][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:35][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:35][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:35][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:44:36][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:36][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:36][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:44:36][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:44:36][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:44:37][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:37][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:38][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:39][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:39][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:41][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:41][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:42][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:42][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:42][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:44:43][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:43][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:43][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:44:43][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:44:43][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:44:44][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:44][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:45][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:45][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:46][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:46][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:47][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:47][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:48][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:48][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:48][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:44:49][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:44:49][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:49][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:50][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1177)
	at org.apache.curator.framework.imps.CreateBuilderImpl$17.call(CreateBuilderImpl.java:1158)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:1155)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:605)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:595)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:573)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:49)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.createPersistent(CuratorZookeeperClient.java:74)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:63)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:44:50][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:44:50][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:50][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6355&timestamp=1529768662649], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6355&timestamp=1529768662649, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:44:51][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:51][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:51][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:51][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:52][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:52][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:52][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:53][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:53][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:53][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:54][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:54][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:54][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:44:55][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:55][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:55][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:55][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6355%26side%3Dprovider%26timestamp%3D1529768662666
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:44:56][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:44:56][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:44:56][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:44:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:56][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:44:56][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6355%26side%3Dprovider%26timestamp%3D1529768662666
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:44:56][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:44:56][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6355&timestamp=1529768662649 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6355&timestamp=1529768662649, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6355%26side%3Dprovider%26timestamp%3D1529768662666, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6355&timestamp=1529768662649, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6355%26side%3Dprovider%26timestamp%3D1529768662666
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6355&timestamp=1529768662649, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6355%26side%3Dprovider%26timestamp%3D1529768662666
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6355%26side%3Dprovider%26timestamp%3D1529768662666
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6355%26side%3Dprovider%26timestamp%3D1529768662666
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:44:56][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:44:56][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:44:56][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:44:56][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:44:56][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:44:56][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:44:57][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:44:57][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:44:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:44:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:44:57][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:44:57][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:44:57][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:45:07][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:45:07][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:45:07][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:45:07][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6355&side=provider&timestamp=1529768662666, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:49:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:49:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:49:26][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sat Jun 23 23:49:26 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:49:26][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:49:26][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:49:26][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:49:26][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:49:26][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:49:26][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-23 23:49:26][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:49:26][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:49:27][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7a52b16b]
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:49:27][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:49:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:27][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6366&registry=zookeeper&timestamp=1529768967314, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:27][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:49:27][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:27][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:49:27][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:49:27][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:49:27][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:49:27][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@2abc60d6
[DEBUG] [2018-06-23 23:49:27][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:49:27][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:49:27][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 23:49:27][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 23:49:27][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:49:28][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:28][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:28][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:49:30][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:30][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:49:31][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:31][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6366&timestamp=1529768967314], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:31][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6366&timestamp=1529768967314, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:31][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:31][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:31][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:49:32][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:32][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:49:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:33][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:33][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:49:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:34][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:34][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:49:34][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:49:34][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:49:35][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:35][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:49:36][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:49:36][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:36][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6366%26side%3Dprovider%26timestamp%3D1529768967327
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-23 23:49:37][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:49:37][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-23 23:49:37][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:49:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:49:37][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6366%26side%3Dprovider%26timestamp%3D1529768967327
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:49:37][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:49:37][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6366&timestamp=1529768967314 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6366&timestamp=1529768967314, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6366%26side%3Dprovider%26timestamp%3D1529768967327, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6366&timestamp=1529768967314, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6366%26side%3Dprovider%26timestamp%3D1529768967327
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6366&timestamp=1529768967314, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6366%26side%3Dprovider%26timestamp%3D1529768967327
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6366%26side%3Dprovider%26timestamp%3D1529768967327
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6366%26side%3Dprovider%26timestamp%3D1529768967327
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:49:37][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:49:37][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:49:37][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:49:37][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:49:37][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:49:37][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:49:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:49:38][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:49:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:49:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:49:39][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:49:39][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:49:39][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:49:49][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:49][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:49][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:49:49][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6366&side=provider&timestamp=1529768967327, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:23][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:52:23][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:52:23][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:52:23][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: startup date [Sat Jun 23 23:52:23 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-23 23:52:23][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:52:23][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-23 23:52:23][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-23 23:52:23][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-23 23:52:23][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:52:23][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7fa89fd9]
[DEBUG] [2018-06-23 23:52:23][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:52:23][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:52:23][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:23][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-23 23:52:24][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@52ff5996]
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-23 23:52:24][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-23 23:52:24][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:24][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:24][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:24][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6370&registry=zookeeper&timestamp=1529769144082, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:24][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-23 23:52:24][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:24][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-23 23:52:24][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-23 23:52:24][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-23 23:52:24][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-23 23:52:24][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@35799785
[DEBUG] [2018-06-23 23:52:24][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-23 23:52:24][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-23 23:52:24][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-23 23:52:24][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-23 23:52:24][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:24][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:24][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:52:25][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:25][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:25][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:52:26][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:26][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:26][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:52:27][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:27][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:27][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:52:28][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:28][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6370&timestamp=1529769144082], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6370&timestamp=1529769144082, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:28][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:29][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:29][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:52:30][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:30][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:30][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-23 23:52:31][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:31][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:31][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-23 23:52:31][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-23 23:52:31][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-23 23:52:32][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:32][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:32][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-23 23:52:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:33][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:33][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6370%26side%3Dprovider%26timestamp%3D1529769144097
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:52:34][org.apache.curator.RetryLoop]Retrying operation
[INFO] [2018-06-23 23:52:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-23 23:52:34][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-23 23:52:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-23 23:52:34][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6370%26side%3Dprovider%26timestamp%3D1529769144097
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-23 23:52:34][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-23 23:52:34][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6370&timestamp=1529769144082 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6370&timestamp=1529769144082, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6370%26side%3Dprovider%26timestamp%3D1529769144097, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6370&timestamp=1529769144082, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6370%26side%3Dprovider%26timestamp%3D1529769144097
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6370&timestamp=1529769144082, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6370%26side%3Dprovider%26timestamp%3D1529769144097
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6370%26side%3Dprovider%26timestamp%3D1529769144097
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6370%26side%3Dprovider%26timestamp%3D1529769144097
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-23 23:52:34][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-23 23:52:34][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-23 23:52:34][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-23 23:52:34][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-23 23:52:34][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-23 23:52:34][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-23 23:52:35][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-23 23:52:35][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-23 23:52:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:52:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-23 23:52:35][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-23 23:52:35][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-23 23:52:35][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-23 23:52:45][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:45][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:45][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-23 23:52:45][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6370&side=provider&timestamp=1529769144097, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:06:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:06:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:06:36][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: startup date [Sun Jun 24 00:06:36 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-24 00:06:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:06:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:06:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:06:36][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:06:36][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-24 00:06:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-24 00:06:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-24 00:06:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-24 00:06:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-24 00:06:37][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:06:37][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@1d491e75: org.springframework.beans.factory.support.DefaultListableBeanFactory@2bb04fbf: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:06:37][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6a18c2f9]
[DEBUG] [2018-06-24 00:06:37][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1aab8583]
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2bb04fbf: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:06:37][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@55cfa262]
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-24 00:06:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-24 00:06:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6414&registry=zookeeper&timestamp=1529769997704, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:38][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:38][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:06:38][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:38][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-24 00:06:38][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-24 00:06:38][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-24 00:06:38][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-24 00:06:38][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@162a7425
[DEBUG] [2018-06-24 00:06:38][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-24 00:06:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-24 00:06:38][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-24 00:06:38][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-24 00:06:38][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:06:39][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:39][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:06:40][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:40][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:06:41][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:41][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:06:42][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:42][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:06:42][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:42][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6414&timestamp=1529769997704], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:42][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6414&timestamp=1529769997704, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:42][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:06:43][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:43][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:43][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-24 00:06:44][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:44][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:44][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:06:45][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:06:45][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-24 00:06:46][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:46][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:06:47][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:47][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:06:48][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:48][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:48][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6414%26side%3Dprovider%26timestamp%3D1529769997724
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-24 00:06:49][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:06:49][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:06:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:49][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:06:49][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:06:49][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6414%26side%3Dprovider%26timestamp%3D1529769997724
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-24 00:06:49][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-24 00:06:49][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6414&timestamp=1529769997704 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6414&timestamp=1529769997704, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6414%26side%3Dprovider%26timestamp%3D1529769997724, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6414&timestamp=1529769997704, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6414%26side%3Dprovider%26timestamp%3D1529769997724
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6414&timestamp=1529769997704, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6414%26side%3Dprovider%26timestamp%3D1529769997724
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6414%26side%3Dprovider%26timestamp%3D1529769997724
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6414%26side%3Dprovider%26timestamp%3D1529769997724
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-24 00:06:49][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-24 00:06:49][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-24 00:06:49][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-24 00:06:49][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-24 00:06:49][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-24 00:06:49][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-24 00:06:50][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:06:50][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-24 00:06:50][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:06:50][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:06:50][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-24 00:06:50][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-24 00:06:50][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-24 00:07:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:07:00][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:07:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:07:00][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6414&side=provider&timestamp=1529769997724, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:16:59][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:16:59][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:16:59][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:16:59][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: startup date [Sun Jun 24 00:16:59 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-24 00:16:59][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:16:59][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:16:59][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-24 00:16:59][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:16:59][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:16:59][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7fa89fd9]
[DEBUG] [2018-06-24 00:16:59][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:16:59][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:16:59][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:16:59][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7a52b16b]
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-24 00:16:59][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-24 00:16:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:00][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:00][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:00][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6430&registry=zookeeper&timestamp=1529770620001, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:00][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:17:00][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:00][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-24 00:17:00][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-24 00:17:00][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-24 00:17:00][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-24 00:17:00][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@35799785
[DEBUG] [2018-06-24 00:17:00][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-24 00:17:00][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-24 00:17:00][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-24 00:17:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-24 00:17:00][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:01][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:01][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:01][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:01][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:02][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:02][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:04][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:04][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:05][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:05][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:05][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:06][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:06][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:06][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-24 00:17:07][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:07][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:07][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:17:07][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:17:07][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-24 00:17:08][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:08][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:09][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:09][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:10][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:10][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:11][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:11][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:12][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:12][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:12][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:13][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-24 00:17:14][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:14][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:14][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:14][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:17:14][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:17:14][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-24 00:17:15][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:15][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:15][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:15][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:15][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6430&timestamp=1529770620001], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:15][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6430&timestamp=1529770620001, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:15][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:16][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:16][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:16][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:16][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:17][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:17][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:17][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:17][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:18][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:18][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:18][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:17:19][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:17:19][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:19][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:19][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-24 00:17:20][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:17:20][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-24 00:17:20][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:20][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:20][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:20][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:17:20][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6430%26side%3Dprovider%26timestamp%3D1529770620019
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-24 00:17:20][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-24 00:17:21][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:17:21][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-24 00:17:21][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:17:21][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:21][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:17:21][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6430%26side%3Dprovider%26timestamp%3D1529770620019
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-24 00:17:21][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-24 00:17:21][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6430&timestamp=1529770620001 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6430&timestamp=1529770620001, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6430%26side%3Dprovider%26timestamp%3D1529770620019, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6430&timestamp=1529770620001, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6430%26side%3Dprovider%26timestamp%3D1529770620019
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6430&timestamp=1529770620001, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6430%26side%3Dprovider%26timestamp%3D1529770620019
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6430%26side%3Dprovider%26timestamp%3D1529770620019
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6430%26side%3Dprovider%26timestamp%3D1529770620019
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-24 00:17:21][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-24 00:17:21][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-24 00:17:21][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-24 00:17:21][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-24 00:17:21][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-24 00:17:21][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-24 00:17:22][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:17:22][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-24 00:17:22][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:17:22][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:17:22][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-24 00:17:22][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-24 00:17:22][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-24 00:17:33][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:33][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:33][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:17:33][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6430&side=provider&timestamp=1529770620019, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:55][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:19:55][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:19:55][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:19:55][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sun Jun 24 00:19:55 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-24 00:19:55][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:19:55][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:19:55][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:19:55][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:19:55][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-24 00:19:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-24 00:19:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-24 00:19:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-24 00:19:55][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-24 00:19:55][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-24 00:19:56][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:19:56][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:19:56][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-24 00:19:56][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:19:56][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5d78069d]
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-24 00:19:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-24 00:19:56][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:19:56][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:19:56][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:19:56][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6435&registry=zookeeper&timestamp=1529770796537, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:19:56][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:19:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:19:57][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-24 00:19:57][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-24 00:19:57][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-24 00:19:57][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-24 00:19:57][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@401623f
[DEBUG] [2018-06-24 00:19:57][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-24 00:19:57][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-24 00:19:57][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-24 00:19:57][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-24 00:19:57][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:19:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:19:57][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:19:58][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:19:58][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:19:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:19:58][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:19:59][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:19:59][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:19:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:19:59][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:00][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:00][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:00][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:01][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:01][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:01][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:01][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:02][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:02][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:02][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:02][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-24 00:20:03][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:03][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6435&timestamp=1529770796537], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:03][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6435&timestamp=1529770796537, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:03][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:03][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:03][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:03][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:03][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:20:03][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:20:03][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-24 00:20:04][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:04][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:04][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:06][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:06][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:06][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:07][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:07][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:07][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:08][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:08][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:08][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:09][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:09][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:09][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:09][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:20:09][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6435%26side%3Dprovider%26timestamp%3D1529770796552
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-24 00:20:10][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:10][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:10][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6435%26side%3Dprovider%26timestamp%3D1529770796552
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.RetryLoop]Retry policy not allowing retry
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:57)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-24 00:20:10][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6435&timestamp=1529770796537 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6435&timestamp=1529770796537, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6435%26side%3Dprovider%26timestamp%3D1529770796552, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6435&timestamp=1529770796537, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6435%26side%3Dprovider%26timestamp%3D1529770796552
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6435&timestamp=1529770796537, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6435%26side%3Dprovider%26timestamp%3D1529770796552
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6435%26side%3Dprovider%26timestamp%3D1529770796552
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6435%26side%3Dprovider%26timestamp%3D1529770796552
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-24 00:20:10][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-24 00:20:10][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-24 00:20:10][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-24 00:20:10][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-24 00:20:11][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:20:11][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-24 00:20:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:20:11][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:20:11][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-24 00:20:11][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-24 00:20:11][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-24 00:20:21][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:21][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:21][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:21][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6435&side=provider&timestamp=1529770796552, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:28][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:20:28][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:20:28][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:20:28][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: startup date [Sun Jun 24 00:20:28 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-24 00:20:28][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:20:28][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:20:28][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-24 00:20:28][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:20:28][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:20:28][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-24 00:20:28][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:20:28][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:20:28][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:20:29][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@58a39c81]
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-24 00:20:29][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-24 00:20:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:29][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6437&registry=zookeeper&timestamp=1529770829178, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:29][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:20:29][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:29][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-24 00:20:29][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-24 00:20:29][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-24 00:20:29][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-24 00:20:29][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@5e59b96d
[DEBUG] [2018-06-24 00:20:29][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-24 00:20:29][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-24 00:20:29][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-24 00:20:29][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-24 00:20:29][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:29][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:30][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:30][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:30][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:31][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:31][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6437&timestamp=1529770829178], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:31][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6437&timestamp=1529770829178, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:31][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:31][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:31][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:31][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:33][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:33][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:33][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:34][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:34][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:34][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:20:35][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:35][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:35][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:35][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-24 00:20:36][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:36][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:36][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:36][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:20:36][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:20:36][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-24 00:20:37][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:20:37][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:37][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6437%26side%3Dprovider%26timestamp%3D1529770829192
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-24 00:20:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:20:38][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-24 00:20:38][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:20:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:20:38][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6437%26side%3Dprovider%26timestamp%3D1529770829192
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-24 00:20:38][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-24 00:20:38][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6437&timestamp=1529770829178 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6437&timestamp=1529770829178, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6437%26side%3Dprovider%26timestamp%3D1529770829192, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6437&timestamp=1529770829178, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6437%26side%3Dprovider%26timestamp%3D1529770829192
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6437&timestamp=1529770829178, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6437%26side%3Dprovider%26timestamp%3D1529770829192
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6437%26side%3Dprovider%26timestamp%3D1529770829192
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6437%26side%3Dprovider%26timestamp%3D1529770829192
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-24 00:20:38][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-24 00:20:38][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-24 00:20:38][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-24 00:20:38][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-24 00:20:38][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-24 00:20:38][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-24 00:20:39][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:20:39][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-24 00:20:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:20:39][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:20:39][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-24 00:20:39][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-24 00:20:39][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-24 00:20:49][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:49][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:49][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:20:49][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6437&side=provider&timestamp=1529770829192, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:31:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:31:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:31:36][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: startup date [Sun Jun 24 00:31:36 CST 2018]; root of context hierarchy
[DEBUG] [2018-06-24 00:31:36][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:31:36][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-06-24 00:31:36][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-06-24 00:31:36][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-06-24 00:31:36][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@6c6455ae: org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:31:36][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1796a109]
[DEBUG] [2018-06-24 00:31:36][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@46bc720e]
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@327581aa: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:31:36][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:31:36][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-06-24 00:31:37][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3c77a535]
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-06-24 00:31:37][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-06-24 00:31:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:37][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=6457&registry=zookeeper&timestamp=1529771497191, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:37][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-06-24 00:31:37][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:37][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-06-24 00:31:37][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-06-24 00:31:37][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-06-24 00:31:37][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-06-24 00:31:37][org.apache.curator.ConnectionState]reset
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@66202088
[DEBUG] [2018-06-24 00:31:37][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-06-24 00:31:37][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-06-24 00:31:37][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-06-24 00:31:37][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205, dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-06-24 00:31:37][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:37][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:31:38][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:38][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:38][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:31:40][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:40][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:40][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:31:41][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:41][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6457&timestamp=1529771497191], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6457&timestamp=1529771497191, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:41][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:41][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:41][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:41][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:31:42][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:42][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:42][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:31:43][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:43][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:43][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:43][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[INFO] [2018-06-24 00:31:44][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:44][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:44][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:44][org.apache.curator.RetryLoop]Retrying operation
[DEBUG] [2018-06-24 00:31:44][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1045)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:268)
	at org.apache.curator.framework.imps.ExistsBuilderImpl$3.call(ExistsBuilderImpl.java:257)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForegroundStandard(ExistsBuilderImpl.java:254)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.pathInForeground(ExistsBuilderImpl.java:247)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:206)
	at org.apache.curator.framework.imps.ExistsBuilderImpl.forPath(ExistsBuilderImpl.java:35)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.checkExists(CuratorZookeeperClient.java:111)
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:56)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:110)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:130)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:124)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:143)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:91)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:505)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:357)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:316)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:215)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:121)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:50)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:776)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.lava.lavafaq.dubbo.Provider.main(Provider.java:7)
[DEBUG] [2018-06-24 00:31:44][org.apache.curator.RetryLoop]Retry policy not allowing retry
[INFO] [2018-06-24 00:31:45][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:45][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:45][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[INFO] [2018-06-24 00:31:46][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[WARN] [2018-06-24 00:31:46][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:46][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:46][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6457%26side%3Dprovider%26timestamp%3D1529771497205
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[INFO] [2018-06-24 00:31:47][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:31:47][org.apache.curator.RetryLoop]Retrying operation
[WARN] [2018-06-24 00:31:47][org.apache.zookeeper.ClientCnxn]Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:739)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:361)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)
[DEBUG] [2018-06-24 00:31:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:47][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1110)
[DEBUG] [2018-06-24 00:31:47][org.apache.curator.RetryLoop]Retry-able exception received
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6457%26side%3Dprovider%26timestamp%3D1529771497205
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
[DEBUG] [2018-06-24 00:31:47][org.apache.curator.RetryLoop]Retry policy not allowing retry
[WARN] [2018-06-24 00:31:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Failed to unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205 to registry zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6457&timestamp=1529771497191 on destroy, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6457&timestamp=1529771497191, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6457%26side%3Dprovider%26timestamp%3D1529771497205, dubbo version: 2.6.1, current host: 192.168.10.102
java.lang.IllegalStateException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205 to registry 192.168.10.221:2181, cause: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6457&timestamp=1529771497191, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6457%26side%3Dprovider%26timestamp%3D1529771497205
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:173)
	at com.alibaba.dubbo.registry.support.AbstractRegistry.destroy(AbstractRegistry.java:450)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.destroy(FailbackRegistry.java:436)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.destroy(ZookeeperRegistry.java:100)
	at com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:71)
	at com.alibaba.dubbo.config.ProtocolConfig.destroyAll(ProtocolConfig.java:158)
	at com.alibaba.dubbo.config.AbstractConfig$1.run(AbstractConfig.java:82)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to unregister dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205 to zookeeper zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=6457&timestamp=1529771497191, cause: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6457%26side%3Dprovider%26timestamp%3D1529771497205
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:120)
	at com.alibaba.dubbo.registry.support.FailbackRegistry.unregister(FailbackRegistry.java:160)
	... 7 more
Caused by: java.lang.IllegalStateException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6457%26side%3Dprovider%26timestamp%3D1529771497205
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:95)
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doUnregister(ZookeeperRegistry.java:118)
	... 8 more
Caused by: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%3A%2F%2F192.168.10.102%3A20880%2Fcom.lava.lavafaq.service.DemoService%3Fanyhost%3Dtrue%26application%3Ddemo-provider%26dubbo%3D2.6.1%26generic%3Dfalse%26interface%3Dcom.lava.lavafaq.service.DemoService%26methods%3DsayHello%26pid%3D6457%26side%3Dprovider%26timestamp%3D1529771497205
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:274)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:268)
	at org.apache.curator.connection.StandardConnectionHandlingPolicy.callWithRetry(StandardConnectionHandlingPolicy.java:64)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:100)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:265)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:249)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:34)
	at com.alibaba.dubbo.remoting.zookeeper.curator.CuratorZookeeperClient.delete(CuratorZookeeperClient.java:92)
	... 9 more
[DEBUG] [2018-06-24 00:31:47][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-06-24 00:31:47][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-06-24 00:31:47][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-06-24 00:31:47][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-06-24 00:31:47][org.apache.zookeeper.ZooKeeper]Closing session: 0x0
[DEBUG] [2018-06-24 00:31:47][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x0
[INFO] [2018-06-24 00:31:48][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[DEBUG] [2018-06-24 00:31:48][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x0 : Connection refused
[DEBUG] [2018-06-24 00:31:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:802)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:426)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:200)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:31:48][org.apache.zookeeper.ClientCnxnSocketNIO]Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:819)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:434)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:207)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1185)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1122)
[DEBUG] [2018-06-24 00:31:48][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x0
[INFO] [2018-06-24 00:31:48][org.apache.zookeeper.ZooKeeper]Session: 0x0 closed
[INFO] [2018-06-24 00:31:48][org.apache.zookeeper.ClientCnxn]EventThread shut down
[INFO] [2018-06-24 00:31:59][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:59][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:59][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-06-24 00:31:59][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=6457&side=provider&timestamp=1529771497205, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:12][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:12][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:12][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-07-06 03:12:12][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: startup date [Fri Jul 06 03:12:12 CST 2018]; root of context hierarchy
[DEBUG] [2018-07-06 03:12:12][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:12][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:12][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-provider.xml]
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-07-06 03:12:12][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [dubbo-provider.xml]
[DEBUG] [2018-07-06 03:12:12][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2b6ea258: org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-07-06 03:12:12][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7fa89fd9]
[DEBUG] [2018-07-06 03:12:12][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@44439b01: defining beans [demoService,demo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.lava.lavafaq.service.DemoService]; root of factory hierarchy
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-provider'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-provider'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-provider' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-provider'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-07-06 03:12:12][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.lava.lavafaq.service.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-provider'
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-07-06 03:12:13][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@32adfbf1]
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-07-06 03:12:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[INFO] [2018-07-06 03:12:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.lava.lavafaq.service.DemoService, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to local registry, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.lava.lavafaq.service.DemoService to url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.lava.lavafaq.service.DemoService url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549 to registry registry://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&pid=1859&registry=zookeeper&timestamp=1530817933522, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:13][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:14][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:14][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:14][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-07-06 03:12:14][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-07-06 03:12:14][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-07-06 03:12:14][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-07-06 03:12:14][org.apache.curator.ConnectionState]reset
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@3d2f3481
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-07-06 03:12:14][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[INFO] [2018-07-06 03:12:14][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Socket connection established to 192.168.10.221/192.168.10.221:2181, initiating session
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Session establishment request sent on 192.168.10.221/192.168.10.221:2181
[INFO] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Session establishment complete on server 192.168.10.221/192.168.10.221:2181, sessionid = 0x1646bdb08530000, negotiated timeout = 40000
[DEBUG] [2018-07-06 03:12:14][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-07-06 03:12:14][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[DEBUG] [2018-07-06 03:12:14][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,1,-101  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,F  response::  
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 2,3  replyHeader:: 2,1,-101  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response::  
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,1,-101  request:: '/dubbo,F  response::  
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,2,0  request:: '/dubbo,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo 
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,3,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService 
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,4,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers 
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,5,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D1859%2526side%253Dprovider%2526timestamp%253D1530817933549,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D1859%2526side%253Dprovider%2526timestamp%253D1530817933549 
[INFO] [2018-07-06 03:12:14][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,5,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{3,3,1530817934657,1530817934657,0,1,0,0,14,1,4} 
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 9,1  replyHeader:: 9,6,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators 
[DEBUG] [2018-07-06 03:12:14][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 10,12  replyHeader:: 10,6,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{6,6,1530817934679,1530817934679,0,0,0,0,14,0,6} 
[INFO] [2018-07-06 03:12:14][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:14][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:14][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, override urls: [empty://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:14][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:14][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:14][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-07-06 03:12:14][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-07-06 03:12:14][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-07-06 03:12:14][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-07-06 03:12:14][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.lava.lavafaq.service.DemoService'
[DEBUG] [2018-07-06 03:12:28][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1646bdb08530000 after 1ms
[DEBUG] [2018-07-06 03:12:41][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1646bdb08530000 after 1ms
[DEBUG] [2018-07-06 03:12:46][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:46][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:46][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-07-06 03:12:46][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4128dca6: startup date [Fri Jul 06 03:12:46 CST 2018]; root of context hierarchy
[DEBUG] [2018-07-06 03:12:46][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:46][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] [2018-07-06 03:12:46][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [dubbo-consumer.xml]
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd=org/springframework/amqp/rabbit/config/spring-rabbit-1.3.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/rabbit=org.springframework.amqp.rabbit.config.RabbitNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[INFO] [2018-07-06 03:12:46][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 3 bean definitions from location pattern [dubbo-consumer.xml]
[DEBUG] [2018-07-06 03:12:46][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@4128dca6: org.springframework.beans.factory.support.DefaultListableBeanFactory@4fef9e5e: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-07-06 03:12:46][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1068452]
[DEBUG] [2018-07-06 03:12:46][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2c02bb74]
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4fef9e5e: defining beans [demo-consumer,com.alibaba.dubbo.config.RegistryConfig,demoService]; root of factory hierarchy
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demo-consumer'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demo-consumer'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demo-consumer' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demo-consumer'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-07-06 03:12:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:46][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'demoService'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demo-consumer'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-07-06 03:12:46][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2345c47f]
[DEBUG] [2018-07-06 03:12:46][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-07-06 03:12:46][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] [2018-07-06 03:12:47][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] [2018-07-06 03:12:47][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] [2018-07-06 03:12:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] [2018-07-06 03:12:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:47][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
[INFO] [2018-07-06 03:12:47][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
[DEBUG] [2018-07-06 03:12:47][org.apache.curator.CuratorZookeeperClient]Starting
[DEBUG] [2018-07-06 03:12:47][org.apache.curator.ConnectionState]Starting
[DEBUG] [2018-07-06 03:12:47][org.apache.curator.ConnectionState]reset
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:host.name=fengjinandeair.lan
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.7.0_71
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/jre
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=/Users/fengjinan/Downloads/ssm_demo/target/classes:/usr/local/apache-tomcat-7.0.82/lib/el-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-es.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper.jar:/usr/local/apache-tomcat-7.0.82/lib/jasper-el.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-util.jar:/usr/local/apache-tomcat-7.0.82/lib/jsp-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-tribes.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat7-websocket.jar:/usr/local/apache-tomcat-7.0.82/lib/websocket-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-coyote.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ha.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-api.jar:/usr/local/apache-tomcat-7.0.82/lib/ecj-4.4.2.jar:/usr/local/apache-tomcat-7.0.82/lib/annotations-api.jar:/usr/local/apache-tomcat-7.0.82/lib/catalina-ant.jar:/usr/local/apache-tomcat-7.0.82/lib/servlet-api.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-ja.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-jdbc.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-i18n-fr.jar:/usr/local/apache-tomcat-7.0.82/lib/tomcat-dbcp.jar:/usr/local/repo/org/apache/poi/poi/3.6/poi-3.6.jar:/usr/local/repo/commons-logging/commons-logging/1.1/commons-logging-1.1.jar:/usr/local/repo/logkit/logkit/1.0.1/logkit-1.0.1.jar:/usr/local/repo/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar:/usr/local/repo/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar:/usr/local/repo/org/apache/poi/poi-ooxml/3.6/poi-ooxml-3.6.jar:/usr/local/repo/org/apache/poi/poi-ooxml-schemas/3.6/poi-ooxml-schemas-3.6.jar:/usr/local/repo/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar:/usr/local/repo/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/usr/local/repo/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0/geronimo-stax-api_1.0_spec-1.0.jar:/usr/local/repo/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/usr/local/repo/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/usr/local/repo/junit/junit/4.11/junit-4.11.jar:/usr/local/repo/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/usr/local/repo/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-oxm/4.0.2.RELEASE/spring-oxm-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-tx/4.0.2.RELEASE/spring-tx-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-jdbc/4.0.2.RELEASE/spring-jdbc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-webmvc/4.0.2.RELEASE/spring-webmvc-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar:/usr/local/repo/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/usr/local/repo/org/springframework/spring-context-support/4.0.2.RELEASE/spring-context-support-4.0.2.RELEASE.jar:/usr/local/repo/org/springframework/spring-test/4.0.2.RELEASE/spring-test-4.0.2.RELEASE.jar:/usr/local/repo/org/mybatis/mybatis/3.2.6/mybatis-3.2.6.jar:/usr/local/repo/org/mybatis/mybatis-spring/1.2.2/mybatis-spring-1.2.2.jar:/usr/local/repo/javax/javaee-api/7.0/javaee-api-7.0.jar:/usr/local/repo/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/usr/local/repo/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar:/usr/local/repo/commons-dbcp/commons-dbcp/1.2.2/commons-dbcp-1.2.2.jar:/usr/local/repo/commons-pool/commons-pool/1.3/commons-pool-1.3.jar:/usr/local/repo/jstl/jstl/1.2/jstl-1.2.jar:/usr/local/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar:/usr/local/repo/com/alibaba/fastjson/1.1.41/fastjson-1.1.41.jar:/usr/local/repo/com/google/code/gson/gson/2.7/gson-2.7.jar:/usr/local/repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/usr/local/repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/usr/local/repo/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/usr/local/repo/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/usr/local/repo/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/usr/local/repo/commons-io/commons-io/2.4/commons-io-2.4.jar:/usr/local/repo/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/usr/local/repo/javax/mail/mail/1.4/mail-1.4.jar:/usr/local/repo/javax/activation/activation/1.1/activation-1.1.jar:/usr/local/repo/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/usr/local/repo/org/springframework/amqp/spring-rabbit/1.3.5.RELEASE/spring-rabbit-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/amqp/spring-amqp/1.3.5.RELEASE/spring-amqp-1.3.5.RELEASE.jar:/usr/local/repo/org/springframework/retry/spring-retry/1.1.0.RELEASE/spring-retry-1.1.0.RELEASE.jar:/usr/local/repo/com/rabbitmq/amqp-client/3.3.4/amqp-client-3.3.4.jar:/usr/local/repo/com/alibaba/dubbo/2.6.1/dubbo-2.6.1.jar:/usr/local/repo/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/usr/local/repo/org/jboss/netty/netty/3.2.5.Final/netty-3.2.5.Final.jar:/usr/local/repo/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/usr/local/repo/jline/jline/0.9.94/jline-0.9.94.jar:/usr/local/repo/org/apache/curator/curator-framework/4.0.1/curator-framework-4.0.1.jar:/usr/local/repo/org/apache/curator/curator-client/4.0.1/curator-client-4.0.1.jar:/usr/local/repo/com/google/guava/guava/20.0/guava-20.0.jar:/usr/local/repo/org/apache/curator/curator-recipes/4.0.1/curator-recipes-4.0.1.jar
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=/Users/fengjinan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=/var/folders/0j/y_gf8mxj3bj74n_3x_0l597h0000gn/T/
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Mac OS X
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=x86_64
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:os.version=10.13.2
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:user.name=fengjinan
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:user.home=/Users/fengjinan
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=/Users/fengjinan/Downloads/ssm_demo
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.10.221:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@1c5d5b5c
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.10.221/192.168.10.221:2181. Will not attempt to authenticate using SASL (unknown error)
[INFO] [2018-07-06 03:12:47][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Socket connection established to 192.168.10.221/192.168.10.221:2181, initiating session
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Session establishment request sent on 192.168.10.221/192.168.10.221:2181
[INFO] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Session establishment complete on server 192.168.10.221/192.168.10.221:2181, sessionid = 0x1646bdb08530001, negotiated timeout = 40000
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
[INFO] [2018-07-06 03:12:47][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
[DEBUG] [2018-07-06 03:12:47][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
[INFO] [2018-07-06 03:12:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,7,-101  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,F  response::  
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 2,3  replyHeader:: 2,7,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{3,3,1530817934657,1530817934657,0,2,0,0,14,2,6} 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,8,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,9,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D1860%2526side%253Dconsumer%2526timestamp%253D1530817967006,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D1860%2526side%253Dconsumer%2526timestamp%253D1530817967006 
[INFO] [2018-07-06 03:12:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,9,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{3,3,1530817934657,1530817934657,0,3,0,0,14,3,8} 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,10,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 7,12  replyHeader:: 7,10,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers,T  response:: v{'dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D1859%2526side%253Dprovider%2526timestamp%253D1530817933549},s{4,4,1530817934661,1530817934661,0,1,0,0,14,1,5} 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,10,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{3,3,1530817934657,1530817934657,0,3,0,0,14,3,8} 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 9,1  replyHeader:: 9,11,-110  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response::  
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 10,12  replyHeader:: 10,11,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/configurators,T  response:: v{},s{6,6,1530817934679,1530817934679,0,0,0,0,14,0,6} 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 11,3  replyHeader:: 11,11,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService,F  response:: s{3,3,1530817934657,1530817934657,0,3,0,0,14,3,8} 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 12,1  replyHeader:: 12,12,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,#3139322e3136382e31302e313032,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.lava.lavafaq.service.DemoService/routers 
[DEBUG] [2018-07-06 03:12:47][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 13,12  replyHeader:: 13,12,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/routers,T  response:: v{},s{12,12,1530817967460,1530817967460,0,0,0,0,14,0,12} 
[INFO] [2018-07-06 03:12:47][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, urls: [dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=configurators&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, empty://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006], dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:47][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Successed connect to server /192.168.10.102:20880 from NettyClient 192.168.10.102 using dubbo version 2.6.1, channel is NettyChannel [channel=[id: 0x7a947037, /192.168.10.102:53772 => /192.168.10.102:20880]], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:47][com.alibaba.dubbo.remoting.transport.AbstractClient] [DUBBO] Start NettyClient fengjinandeAir.lan/192.168.10.102 connect to the server /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:47][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:47][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Refer dubbo service com.lava.lavafaq.service.DemoService from url zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&register.ip=192.168.10.102&remote.timestamp=1530817933549&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:48][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:48][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:48][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:48][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=1860&timestamp=1530817967064], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-consumer&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=1860&timestamp=1530817967064, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:48][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 14,2  replyHeader:: 14,13,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/consumers/consumer%253A%252F%252F192.168.10.102%252Fcom.lava.lavafaq.service.DemoService%253Fapplication%253Ddemo-consumer%2526category%253Dconsumers%2526check%253Dfalse%2526dubbo%253D2.6.1%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D1860%2526side%253Dconsumer%2526timestamp%253D1530817967006,-1  response:: null
[INFO] [2018-07-06 03:12:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=consumers&check=false&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:48][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url consumer://192.168.10.102/com.lava.lavafaq.service.DemoService?application=demo-consumer&category=providers,configurators,routers&dubbo=2.6.1&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:12:48][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-07-06 03:12:48][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-07-06 03:12:48][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-07-06 03:12:48][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-07-06 03:12:48][org.apache.zookeeper.ZooKeeper]Closing session: 0x1646bdb08530001
[DEBUG] [2018-07-06 03:12:48][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1646bdb08530001
[DEBUG] [2018-07-06 03:12:48][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530001, packet:: clientPath:null serverPath:null finished:false header:: 15,-11  replyHeader:: 15,14,0  request:: null response:: null
[DEBUG] [2018-07-06 03:12:48][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1646bdb08530001
[INFO] [2018-07-06 03:12:48][org.apache.zookeeper.ZooKeeper]Session: 0x1646bdb08530001 closed
[INFO] [2018-07-06 03:12:48][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-07-06 03:12:54][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1646bdb08530000 after 1ms
[INFO] [2018-07-06 03:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: /192.168.10.102:53772-->/192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:58][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x7a947037, /192.168.10.102:53772 => /192.168.10.102:20880], dubbo version: 2.6.1, current host: 192.168.10.102
[WARN] [2018-07-06 03:12:58][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.10.102:20880. You can graceful shutdown now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:20880,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&register.ip=192.168.10.102&remote.timestamp=1530817933549&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconnected from /192.168.10.102:53772,url:dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.6.1&generic=false&heartbeat=60000&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo connect: 192.168.10.102:0-->192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Destroy reference: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-consumer&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1860&register.ip=192.168.10.102&remote.timestamp=1530817933549&side=consumer&timestamp=1530817967006, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:13:08][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1646bdb08530000 after 1ms
[INFO] [2018-07-06 03:13:16][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:16][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=1859&timestamp=1530817933522], dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://192.168.10.221:2181/com.alibaba.dubbo.registry.RegistryService?application=demo-provider&dubbo=2.6.1&interface=com.alibaba.dubbo.registry.RegistryService&pid=1859&timestamp=1530817933522, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:13:16][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 11,2  replyHeader:: 11,15,0  request:: '/dubbo/com.lava.lavafaq.service.DemoService/providers/dubbo%253A%252F%252F192.168.10.102%253A20880%252Fcom.lava.lavafaq.service.DemoService%253Fanyhost%253Dtrue%2526application%253Ddemo-provider%2526dubbo%253D2.6.1%2526generic%253Dfalse%2526interface%253Dcom.lava.lavafaq.service.DemoService%2526methods%253DsayHello%2526pid%253D1859%2526side%253Dprovider%2526timestamp%253D1530817933549,-1  response:: null
[INFO] [2018-07-06 03:13:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:16][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&category=configurators&check=false&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[DEBUG] [2018-07-06 03:13:16][org.apache.curator.framework.imps.CuratorFrameworkImpl]Closing
[INFO] [2018-07-06 03:13:16][org.apache.curator.framework.imps.CuratorFrameworkImpl]backgroundOperationsLoop exiting
[DEBUG] [2018-07-06 03:13:16][org.apache.curator.CuratorZookeeperClient]Closing
[DEBUG] [2018-07-06 03:13:16][org.apache.curator.ConnectionState]Closing
[DEBUG] [2018-07-06 03:13:16][org.apache.zookeeper.ZooKeeper]Closing session: 0x1646bdb08530000
[DEBUG] [2018-07-06 03:13:16][org.apache.zookeeper.ClientCnxn]Closing client for session: 0x1646bdb08530000
[DEBUG] [2018-07-06 03:13:16][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1646bdb08530000, packet:: clientPath:null serverPath:null finished:false header:: 12,-11  replyHeader:: 12,16,0  request:: null response:: null
[DEBUG] [2018-07-06 03:13:16][org.apache.zookeeper.ClientCnxn]Disconnecting client for session: 0x1646bdb08530000
[INFO] [2018-07-06 03:13:16][org.apache.zookeeper.ZooKeeper]Session: 0x1646bdb08530000 closed
[INFO] [2018-07-06 03:13:16][org.apache.zookeeper.ClientCnxn]EventThread shut down
[DEBUG] [2018-07-06 03:13:16][org.apache.zookeeper.ClientCnxn]An exception was thrown while closing send thread for session 0x1646bdb08530000 : Unable to read additional data from server sessionid 0x1646bdb08530000, likely server has closed socket
[INFO] [2018-07-06 03:13:26][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:26][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.10.102:20880, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:26][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.10.102:20880/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
[INFO] [2018-07-06 03:13:26][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.lava.lavafaq.service.DemoService?anyhost=true&application=demo-provider&bind.ip=192.168.10.102&bind.port=20880&dubbo=2.6.1&generic=false&interface=com.lava.lavafaq.service.DemoService&methods=sayHello&pid=1859&side=provider&timestamp=1530817933549, dubbo version: 2.6.1, current host: 192.168.10.102
